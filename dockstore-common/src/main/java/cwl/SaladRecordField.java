package cwl;
/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
@SuppressWarnings("all")
/** A field of a record. */
@org.apache.avro.specific.AvroGenerated
public class SaladRecordField extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"SaladRecordField\",\"doc\":\"A field of a record.\",\"fields\":[{\"name\":\"name\",\"type\":\"string\",\"doc\":\"The name of the field\\n\",\"jsonldPredicate\":\"@id\",\"inherited_from\":\"https://w3id.org/cwl/salad#RecordField\"},{\"name\":\"doc\",\"type\":[\"null\",\"string\"],\"doc\":\"A documentation string for this field\\n\",\"jsonldPredicate\":\"sld:doc\",\"inherited_from\":\"https://w3id.org/cwl/salad#RecordField\"},{\"name\":\"type\",\"type\":[{\"type\":\"enum\",\"name\":\"PrimitiveType\",\"symbols\":[\"null\",\"boolean\",\"int\",\"long\",\"float\",\"double\",\"string\"]},{\"type\":\"record\",\"name\":\"RecordSchema\",\"fields\":[{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"Record_symbol\",\"symbols\":[\"record\"]},\"doc\":\"Must be `record`\",\"jsonldPredicate\":{\"_type\":\"@vocab\",\"_id\":\"https://w3id.org/cwl/salad#type\"}},{\"name\":\"fields\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"RecordField\",\"doc\":\"A field of a record.\",\"fields\":[{\"name\":\"name\",\"type\":\"string\",\"doc\":\"The name of the field\\n\",\"jsonldPredicate\":\"@id\"},{\"name\":\"doc\",\"type\":[\"null\",\"string\"],\"doc\":\"A documentation string for this field\\n\",\"jsonldPredicate\":\"sld:doc\"},{\"name\":\"type\",\"type\":[\"PrimitiveType\",\"RecordSchema\",{\"type\":\"record\",\"name\":\"EnumSchema\",\"doc\":\"Define an enumerated type.\\n\",\"fields\":[{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"Enum_symbol\",\"symbols\":[\"enum\"]},\"doc\":\"Must be `enum`\",\"jsonldPredicate\":{\"_type\":\"@vocab\",\"_id\":\"https://w3id.org/cwl/salad#type\"}},{\"name\":\"symbols\",\"type\":[{\"type\":\"array\",\"items\":\"string\"}],\"doc\":\"Defines the set of valid symbols.\",\"jsonldPredicate\":{\"_type\":\"@id\",\"_id\":\"https://w3id.org/cwl/salad#symbols\",\"identity\":true}}]},{\"type\":\"record\",\"name\":\"ArraySchema\",\"fields\":[{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"Array_symbol\",\"symbols\":[\"array\"]},\"doc\":\"Must be `array`\",\"jsonldPredicate\":{\"_type\":\"@vocab\",\"_id\":\"https://w3id.org/cwl/salad#type\"}},{\"name\":\"items\",\"type\":[\"PrimitiveType\",\"RecordSchema\",\"EnumSchema\",\"ArraySchema\",\"string\",{\"type\":\"array\",\"items\":[\"PrimitiveType\",\"RecordSchema\",\"EnumSchema\",\"ArraySchema\",\"string\"]}],\"doc\":\"Defines the type of the array elements.\",\"jsonldPredicate\":{\"_type\":\"@vocab\",\"_id\":\"https://w3id.org/cwl/salad#items\"}}]},\"string\",{\"type\":\"array\",\"items\":[\"PrimitiveType\",\"RecordSchema\",\"EnumSchema\",\"ArraySchema\",\"string\"]}],\"doc\":\"The field type\\n\",\"jsonldPredicate\":{\"_type\":\"@vocab\",\"_id\":\"https://w3id.org/cwl/salad#type\"}}]}}],\"doc\":\"Defines the fields of the record.\",\"jsonldPredicate\":\"sld:fields\"}]},\"EnumSchema\",\"ArraySchema\",\"string\",{\"type\":\"array\",\"items\":[\"PrimitiveType\",\"RecordSchema\",\"EnumSchema\",\"ArraySchema\",\"string\"]}],\"doc\":\"The field type\\n\",\"jsonldPredicate\":{\"_type\":\"@vocab\",\"_id\":\"https://w3id.org/cwl/salad#type\"},\"inherited_from\":\"https://w3id.org/cwl/salad#RecordField\"},{\"name\":\"jsonldPredicate\",\"type\":[\"null\",\"string\",{\"type\":\"record\",\"name\":\"JsonldPredicate\",\"doc\":\"Attached to a record field to define how the parent record field is handled for\\nURI resolution and JSON-LD context generation.\\n\",\"fields\":[{\"name\":\"_id\",\"type\":[\"null\",\"string\"],\"doc\":\"The predicate URI that this field corresponds to.\\nCorresponds to JSON-LD `@id` directive.\\n\",\"jsonldPredicate\":{\"_type\":\"@id\",\"_id\":\"https://w3id.org/cwl/salad#_id\",\"identity\":true}},{\"name\":\"_type\",\"type\":[\"null\",\"string\"],\"doc\":\"The context type hint, corresponds to JSON-LD `@type` directive.\\n\\n* If the value of this field is `@id` and `identity` is false or\\nunspecified, the parent field must be resolved using the link\\nresolution rules.  If `identity` is true, the parent field must be\\nresolved using the identifier expansion rules.\\n\\n* If the value of this field is `@vocab`, the parent field must be\\n  resolved using the vocabulary resolution rules.\\n\"},{\"name\":\"_container\",\"type\":[\"null\",\"string\"],\"doc\":\"Structure hint, corresponds to JSON-LD `@container` directive.\\n\"},{\"name\":\"identity\",\"type\":[\"null\",\"boolean\"],\"doc\":\"If true and `_type` is `@id` this indicates that the parent field must\\nbe resolved according to identity resolution rules instead of link\\nresolution rules.  In addition, the field value is considered an\\nassertion that the linked value exists; absence of an object in the loaded document\\nwith the URI is not an error.\\n\"},{\"name\":\"noLinkCheck\",\"type\":[\"null\",\"boolean\"],\"doc\":\"If true, this indicates that link validation traversal must stop at\\nthis field.  This field (it is is a URI) or any fields under it (if it\\nis an object or array) are not subject to link checking.\\n\"}]}],\"doc\":\"Annotate this type with linked data context.\\n\",\"jsonldPredicate\":\"sld:jsonldPredicate\"}],\"extends\":\"https://w3id.org/cwl/salad#RecordField\"}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** The name of the field
 */
  @Deprecated public java.lang.CharSequence name;
  /** A documentation string for this field
 */
  @Deprecated public java.lang.CharSequence doc;
  /** The field type
 */
  @Deprecated public java.lang.Object type;
  /** Annotate this type with linked data context.
 */
  @Deprecated public java.lang.Object jsonldPredicate;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public SaladRecordField() {}

  /**
   * All-args constructor.
   */
  public SaladRecordField(java.lang.CharSequence name, java.lang.CharSequence doc, java.lang.Object type, java.lang.Object jsonldPredicate) {
    this.name = name;
    this.doc = doc;
    this.type = type;
    this.jsonldPredicate = jsonldPredicate;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return name;
    case 1: return doc;
    case 2: return type;
    case 3: return jsonldPredicate;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: name = (java.lang.CharSequence)value$; break;
    case 1: doc = (java.lang.CharSequence)value$; break;
    case 2: type = (java.lang.Object)value$; break;
    case 3: jsonldPredicate = (java.lang.Object)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'name' field.
   * The name of the field
   */
  public java.lang.CharSequence getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * The name of the field
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'doc' field.
   * A documentation string for this field
   */
  public java.lang.CharSequence getDoc() {
    return doc;
  }

  /**
   * Sets the value of the 'doc' field.
   * A documentation string for this field
   * @param value the value to set.
   */
  public void setDoc(java.lang.CharSequence value) {
    this.doc = value;
  }

  /**
   * Gets the value of the 'type' field.
   * The field type
   */
  public java.lang.Object getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   * The field type
   * @param value the value to set.
   */
  public void setType(java.lang.Object value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'jsonldPredicate' field.
   * Annotate this type with linked data context.
   */
  public java.lang.Object getJsonldPredicate() {
    return jsonldPredicate;
  }

  /**
   * Sets the value of the 'jsonldPredicate' field.
   * Annotate this type with linked data context.
   * @param value the value to set.
   */
  public void setJsonldPredicate(java.lang.Object value) {
    this.jsonldPredicate = value;
  }

  /** Creates a new SaladRecordField RecordBuilder */
  public static SaladRecordField.Builder newBuilder() {
    return new SaladRecordField.Builder();
  }
  
  /** Creates a new SaladRecordField RecordBuilder by copying an existing Builder */
  public static SaladRecordField.Builder newBuilder(SaladRecordField.Builder other) {
    return new SaladRecordField.Builder(other);
  }
  
  /** Creates a new SaladRecordField RecordBuilder by copying an existing SaladRecordField instance */
  public static SaladRecordField.Builder newBuilder(SaladRecordField other) {
    return new SaladRecordField.Builder(other);
  }
  
  /**
   * RecordBuilder for SaladRecordField instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<SaladRecordField>
    implements org.apache.avro.data.RecordBuilder<SaladRecordField> {

    private java.lang.CharSequence name;
    private java.lang.CharSequence doc;
    private java.lang.Object type;
    private java.lang.Object jsonldPredicate;

    /** Creates a new Builder */
    private Builder() {
      super(SaladRecordField.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(SaladRecordField.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.doc)) {
        this.doc = data().deepCopy(fields()[1].schema(), other.doc);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.type)) {
        this.type = data().deepCopy(fields()[2].schema(), other.type);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.jsonldPredicate)) {
        this.jsonldPredicate = data().deepCopy(fields()[3].schema(), other.jsonldPredicate);
        fieldSetFlags()[3] = true;
      }
    }
    
    /** Creates a Builder by copying an existing SaladRecordField instance */
    private Builder(SaladRecordField other) {
            super(SaladRecordField.SCHEMA$);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.doc)) {
        this.doc = data().deepCopy(fields()[1].schema(), other.doc);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.type)) {
        this.type = data().deepCopy(fields()[2].schema(), other.type);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.jsonldPredicate)) {
        this.jsonldPredicate = data().deepCopy(fields()[3].schema(), other.jsonldPredicate);
        fieldSetFlags()[3] = true;
      }
    }

    /** Gets the value of the 'name' field */
    public java.lang.CharSequence getName() {
      return name;
    }
    
    /** Sets the value of the 'name' field */
    public SaladRecordField.Builder setName(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.name = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'name' field has been set */
    public boolean hasName() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'name' field */
    public SaladRecordField.Builder clearName() {
      name = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'doc' field */
    public java.lang.CharSequence getDoc() {
      return doc;
    }
    
    /** Sets the value of the 'doc' field */
    public SaladRecordField.Builder setDoc(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.doc = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'doc' field has been set */
    public boolean hasDoc() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'doc' field */
    public SaladRecordField.Builder clearDoc() {
      doc = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'type' field */
    public java.lang.Object getType() {
      return type;
    }
    
    /** Sets the value of the 'type' field */
    public SaladRecordField.Builder setType(java.lang.Object value) {
      validate(fields()[2], value);
      this.type = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'type' field has been set */
    public boolean hasType() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'type' field */
    public SaladRecordField.Builder clearType() {
      type = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'jsonldPredicate' field */
    public java.lang.Object getJsonldPredicate() {
      return jsonldPredicate;
    }
    
    /** Sets the value of the 'jsonldPredicate' field */
    public SaladRecordField.Builder setJsonldPredicate(java.lang.Object value) {
      validate(fields()[3], value);
      this.jsonldPredicate = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'jsonldPredicate' field has been set */
    public boolean hasJsonldPredicate() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'jsonldPredicate' field */
    public SaladRecordField.Builder clearJsonldPredicate() {
      jsonldPredicate = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public SaladRecordField build() {
      try {
        SaladRecordField record = new SaladRecordField();
        record.name = fieldSetFlags()[0] ? this.name : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.doc = fieldSetFlags()[1] ? this.doc : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.type = fieldSetFlags()[2] ? this.type : (java.lang.Object) defaultValue(fields()[2]);
        record.jsonldPredicate = fieldSetFlags()[3] ? this.jsonldPredicate : (java.lang.Object) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
