package cwl;
/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
@SuppressWarnings("all")
/** Attached to a record field to define how the parent record field is handled for
URI resolution and JSON-LD context generation.
 */
@org.apache.avro.specific.AvroGenerated
public class JsonldPredicate extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"JsonldPredicate\",\"doc\":\"Attached to a record field to define how the parent record field is handled for\\nURI resolution and JSON-LD context generation.\\n\",\"fields\":[{\"name\":\"_id\",\"type\":[\"null\",\"string\"],\"doc\":\"The predicate URI that this field corresponds to.\\nCorresponds to JSON-LD `@id` directive.\\n\",\"jsonldPredicate\":{\"_type\":\"@id\",\"_id\":\"https://w3id.org/cwl/salad#_id\",\"identity\":true}},{\"name\":\"_type\",\"type\":[\"null\",\"string\"],\"doc\":\"The context type hint, corresponds to JSON-LD `@type` directive.\\n\\n* If the value of this field is `@id` and `identity` is false or\\nunspecified, the parent field must be resolved using the link\\nresolution rules.  If `identity` is true, the parent field must be\\nresolved using the identifier expansion rules.\\n\\n* If the value of this field is `@vocab`, the parent field must be\\n  resolved using the vocabulary resolution rules.\\n\"},{\"name\":\"_container\",\"type\":[\"null\",\"string\"],\"doc\":\"Structure hint, corresponds to JSON-LD `@container` directive.\\n\"},{\"name\":\"identity\",\"type\":[\"null\",\"boolean\"],\"doc\":\"If true and `_type` is `@id` this indicates that the parent field must\\nbe resolved according to identity resolution rules instead of link\\nresolution rules.  In addition, the field value is considered an\\nassertion that the linked value exists; absence of an object in the loaded document\\nwith the URI is not an error.\\n\"},{\"name\":\"noLinkCheck\",\"type\":[\"null\",\"boolean\"],\"doc\":\"If true, this indicates that link validation traversal must stop at\\nthis field.  This field (it is is a URI) or any fields under it (if it\\nis an object or array) are not subject to link checking.\\n\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** The predicate URI that this field corresponds to.
Corresponds to JSON-LD `@id` directive.
 */
  @Deprecated public java.lang.CharSequence _id;
  /** The context type hint, corresponds to JSON-LD `@type` directive.

* If the value of this field is `@id` and `identity` is false or
unspecified, the parent field must be resolved using the link
resolution rules.  If `identity` is true, the parent field must be
resolved using the identifier expansion rules.

* If the value of this field is `@vocab`, the parent field must be
  resolved using the vocabulary resolution rules.
 */
  @Deprecated public java.lang.CharSequence _type;
  /** Structure hint, corresponds to JSON-LD `@container` directive.
 */
  @Deprecated public java.lang.CharSequence _container;
  /** If true and `_type` is `@id` this indicates that the parent field must
be resolved according to identity resolution rules instead of link
resolution rules.  In addition, the field value is considered an
assertion that the linked value exists; absence of an object in the loaded document
with the URI is not an error.
 */
  @Deprecated public java.lang.Boolean identity;
  /** If true, this indicates that link validation traversal must stop at
this field.  This field (it is is a URI) or any fields under it (if it
is an object or array) are not subject to link checking.
 */
  @Deprecated public java.lang.Boolean noLinkCheck;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public JsonldPredicate() {}

  /**
   * All-args constructor.
   */
  public JsonldPredicate(java.lang.CharSequence _id, java.lang.CharSequence _type, java.lang.CharSequence _container, java.lang.Boolean identity, java.lang.Boolean noLinkCheck) {
    this._id = _id;
    this._type = _type;
    this._container = _container;
    this.identity = identity;
    this.noLinkCheck = noLinkCheck;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return _id;
    case 1: return _type;
    case 2: return _container;
    case 3: return identity;
    case 4: return noLinkCheck;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: _id = (java.lang.CharSequence)value$; break;
    case 1: _type = (java.lang.CharSequence)value$; break;
    case 2: _container = (java.lang.CharSequence)value$; break;
    case 3: identity = (java.lang.Boolean)value$; break;
    case 4: noLinkCheck = (java.lang.Boolean)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the '_id' field.
   * The predicate URI that this field corresponds to.
Corresponds to JSON-LD `@id` directive.
   */
  public java.lang.CharSequence getId$1() {
    return _id;
  }

  /**
   * Sets the value of the '_id' field.
   * The predicate URI that this field corresponds to.
Corresponds to JSON-LD `@id` directive.
   * @param value the value to set.
   */
  public void setId$1(java.lang.CharSequence value) {
    this._id = value;
  }

  /**
   * Gets the value of the '_type' field.
   * The context type hint, corresponds to JSON-LD `@type` directive.

* If the value of this field is `@id` and `identity` is false or
unspecified, the parent field must be resolved using the link
resolution rules.  If `identity` is true, the parent field must be
resolved using the identifier expansion rules.

* If the value of this field is `@vocab`, the parent field must be
  resolved using the vocabulary resolution rules.
   */
  public java.lang.CharSequence getType$1() {
    return _type;
  }

  /**
   * Sets the value of the '_type' field.
   * The context type hint, corresponds to JSON-LD `@type` directive.

* If the value of this field is `@id` and `identity` is false or
unspecified, the parent field must be resolved using the link
resolution rules.  If `identity` is true, the parent field must be
resolved using the identifier expansion rules.

* If the value of this field is `@vocab`, the parent field must be
  resolved using the vocabulary resolution rules.
   * @param value the value to set.
   */
  public void setType$1(java.lang.CharSequence value) {
    this._type = value;
  }

  /**
   * Gets the value of the '_container' field.
   * Structure hint, corresponds to JSON-LD `@container` directive.
   */
  public java.lang.CharSequence getContainer$1() {
    return _container;
  }

  /**
   * Sets the value of the '_container' field.
   * Structure hint, corresponds to JSON-LD `@container` directive.
   * @param value the value to set.
   */
  public void setContainer$1(java.lang.CharSequence value) {
    this._container = value;
  }

  /**
   * Gets the value of the 'identity' field.
   * If true and `_type` is `@id` this indicates that the parent field must
be resolved according to identity resolution rules instead of link
resolution rules.  In addition, the field value is considered an
assertion that the linked value exists; absence of an object in the loaded document
with the URI is not an error.
   */
  public java.lang.Boolean getIdentity() {
    return identity;
  }

  /**
   * Sets the value of the 'identity' field.
   * If true and `_type` is `@id` this indicates that the parent field must
be resolved according to identity resolution rules instead of link
resolution rules.  In addition, the field value is considered an
assertion that the linked value exists; absence of an object in the loaded document
with the URI is not an error.
   * @param value the value to set.
   */
  public void setIdentity(java.lang.Boolean value) {
    this.identity = value;
  }

  /**
   * Gets the value of the 'noLinkCheck' field.
   * If true, this indicates that link validation traversal must stop at
this field.  This field (it is is a URI) or any fields under it (if it
is an object or array) are not subject to link checking.
   */
  public java.lang.Boolean getNoLinkCheck() {
    return noLinkCheck;
  }

  /**
   * Sets the value of the 'noLinkCheck' field.
   * If true, this indicates that link validation traversal must stop at
this field.  This field (it is is a URI) or any fields under it (if it
is an object or array) are not subject to link checking.
   * @param value the value to set.
   */
  public void setNoLinkCheck(java.lang.Boolean value) {
    this.noLinkCheck = value;
  }

  /** Creates a new JsonldPredicate RecordBuilder */
  public static JsonldPredicate.Builder newBuilder() {
    return new JsonldPredicate.Builder();
  }
  
  /** Creates a new JsonldPredicate RecordBuilder by copying an existing Builder */
  public static JsonldPredicate.Builder newBuilder(JsonldPredicate.Builder other) {
    return new JsonldPredicate.Builder(other);
  }
  
  /** Creates a new JsonldPredicate RecordBuilder by copying an existing JsonldPredicate instance */
  public static JsonldPredicate.Builder newBuilder(JsonldPredicate other) {
    return new JsonldPredicate.Builder(other);
  }
  
  /**
   * RecordBuilder for JsonldPredicate instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<JsonldPredicate>
    implements org.apache.avro.data.RecordBuilder<JsonldPredicate> {

    private java.lang.CharSequence _id;
    private java.lang.CharSequence _type;
    private java.lang.CharSequence _container;
    private java.lang.Boolean identity;
    private java.lang.Boolean noLinkCheck;

    /** Creates a new Builder */
    private Builder() {
      super(JsonldPredicate.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(JsonldPredicate.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other._id)) {
        this._id = data().deepCopy(fields()[0].schema(), other._id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other._type)) {
        this._type = data().deepCopy(fields()[1].schema(), other._type);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other._container)) {
        this._container = data().deepCopy(fields()[2].schema(), other._container);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.identity)) {
        this.identity = data().deepCopy(fields()[3].schema(), other.identity);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.noLinkCheck)) {
        this.noLinkCheck = data().deepCopy(fields()[4].schema(), other.noLinkCheck);
        fieldSetFlags()[4] = true;
      }
    }
    
    /** Creates a Builder by copying an existing JsonldPredicate instance */
    private Builder(JsonldPredicate other) {
            super(JsonldPredicate.SCHEMA$);
      if (isValidValue(fields()[0], other._id)) {
        this._id = data().deepCopy(fields()[0].schema(), other._id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other._type)) {
        this._type = data().deepCopy(fields()[1].schema(), other._type);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other._container)) {
        this._container = data().deepCopy(fields()[2].schema(), other._container);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.identity)) {
        this.identity = data().deepCopy(fields()[3].schema(), other.identity);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.noLinkCheck)) {
        this.noLinkCheck = data().deepCopy(fields()[4].schema(), other.noLinkCheck);
        fieldSetFlags()[4] = true;
      }
    }

    /** Gets the value of the '_id' field */
    public java.lang.CharSequence getId$1() {
      return _id;
    }
    
    /** Sets the value of the '_id' field */
    public JsonldPredicate.Builder setId$1(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this._id = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the '_id' field has been set */
    public boolean hasId$1() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the '_id' field */
    public JsonldPredicate.Builder clearId$1() {
      _id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the '_type' field */
    public java.lang.CharSequence getType$1() {
      return _type;
    }
    
    /** Sets the value of the '_type' field */
    public JsonldPredicate.Builder setType$1(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this._type = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the '_type' field has been set */
    public boolean hasType$1() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the '_type' field */
    public JsonldPredicate.Builder clearType$1() {
      _type = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the '_container' field */
    public java.lang.CharSequence getContainer$1() {
      return _container;
    }
    
    /** Sets the value of the '_container' field */
    public JsonldPredicate.Builder setContainer$1(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this._container = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the '_container' field has been set */
    public boolean hasContainer$1() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the '_container' field */
    public JsonldPredicate.Builder clearContainer$1() {
      _container = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'identity' field */
    public java.lang.Boolean getIdentity() {
      return identity;
    }
    
    /** Sets the value of the 'identity' field */
    public JsonldPredicate.Builder setIdentity(java.lang.Boolean value) {
      validate(fields()[3], value);
      this.identity = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'identity' field has been set */
    public boolean hasIdentity() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'identity' field */
    public JsonldPredicate.Builder clearIdentity() {
      identity = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'noLinkCheck' field */
    public java.lang.Boolean getNoLinkCheck() {
      return noLinkCheck;
    }
    
    /** Sets the value of the 'noLinkCheck' field */
    public JsonldPredicate.Builder setNoLinkCheck(java.lang.Boolean value) {
      validate(fields()[4], value);
      this.noLinkCheck = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'noLinkCheck' field has been set */
    public boolean hasNoLinkCheck() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'noLinkCheck' field */
    public JsonldPredicate.Builder clearNoLinkCheck() {
      noLinkCheck = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public JsonldPredicate build() {
      try {
        JsonldPredicate record = new JsonldPredicate();
        record._id = fieldSetFlags()[0] ? this._id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record._type = fieldSetFlags()[1] ? this._type : (java.lang.CharSequence) defaultValue(fields()[1]);
        record._container = fieldSetFlags()[2] ? this._container : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.identity = fieldSetFlags()[3] ? this.identity : (java.lang.Boolean) defaultValue(fields()[3]);
        record.noLinkCheck = fieldSetFlags()[4] ? this.noLinkCheck : (java.lang.Boolean) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
