openapi: 3.0.1
info:
  title: Dockstore
  description: The Dockstore API, includes proprietary and GA4GH V1+V2 endpoints
  termsOfService: http://swagger.io/terms/
  contact:
    name: Dockstore@ga4gh
    url: https://discuss.dockstore.org/t/opening-helpdesk-tickets/1506
    email: theglobalalliance@genomicsandhealth.org
  license:
    name: Apache 2.0
    url: https://github.com/dockstore/dockstore/blob/develop/LICENSE
  version: 1.6.0
externalDocs:
  description: User documentation for dockstore
  url: https://docs.dockstore.org/
tags:
- name: aliases
  description: Create, update list aliases for accessing entries
- name: organizations
  description: Operations on Dockstore organizations
- name: containers
  description: List and register entries in the dockstore (pairs of images + metadata
    (CWL and Dockerfile))
- name: containertags
  description: List and modify tags for containers
- name: entries
  description: Interact with entries in Dockstore regardless of whether they are containers
    or workflows
- name: hosted
  description: Created and modify hosted entries in the dockstore
- name: metadata
  description: Information about Dockstore like RSS, sitemap, lists of dependencies,
    etc.
- name: curation
  description: List and modify notifications for users of Dockstore
- name: workflows
  description: List and register workflows in the dockstore (CWL, Nextflow, WDL)
- name: tokens
  description: List, modify, refresh, and delete tokens for external services
- name: toolTester
  description: Interactions with the Dockstore-support's ToolTester application
- name: users
  description: List, modify, and manage end users of the dockstore
- name: extendedGA4GH
  description: Optional experimental extensions of the GA4GH API
- name: GA4GH
  description: A curated subset of resources proposed as a common standard for tool
    repositories. Implements TRS [2.0.0-beta.2](https://github.com/ga4gh/tool-registry-service-schemas/releases/tag/2.0.0-beta.2)
    . Integrators are welcome to use these endpoints but they are subject to change
    based on community input.
- name: GA4GHV1
  description: A curated subset of resources proposed as a common standard for tool
    repositories. Implements TRS [1.0.0](https://github.com/ga4gh/tool-registry-service-schemas/releases/tag/1.0.0)
    and is considered final (not subject to change)
paths:
  /organizations/collections/{collectionId}/aliases:
    post:
      tags:
      - organizations
      summary: Add aliases linked to a collection in Dockstore.
      description: Aliases are alphanumerical (case-insensitive and may contain internal
        hyphens), given in a comma-delimited list.
      operationId: addCollectionAliases_1
      parameters:
      - name: collectionId
        in: path
        description: Collection to modify.
        required: true
        schema:
          type: integer
          format: int64
      - name: aliases
        in: query
        description: Comma-delimited list of aliases.
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Aliasable'
      security:
      - bearer: []
  /organizations/collections/{alias}/aliases:
    get:
      tags:
      - organizations
      summary: Retrieve a collection by alias.
      description: Retrieve a collection by alias.
      operationId: getCollectionByAlias
      parameters:
      - name: alias
        in: path
        description: Alias of the collection.
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
  /organizations/{organizationId}/collections/{collectionId}:
    get:
      tags:
      - organizations
      summary: Retrieve a collection by ID.
      description: Retrieve a collection by ID. Supports optional authentication.
      operationId: getCollectionById
      parameters:
      - name: organizationId
        in: path
        description: Organization ID.
        required: true
        schema:
          type: integer
          format: int64
      - name: collectionId
        in: path
        description: Collection ID.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
      security:
      - bearer: []
    put:
      tags:
      - organizations
      summary: Update a collection.
      description: Update a collection. Currently only name, display name, description,
        and topic can be updated.
      operationId: updateCollection
      parameters:
      - name: organizationId
        in: path
        description: Organization ID.
        required: true
        schema:
          type: integer
          format: int64
      - name: collectionId
        in: path
        description: Collection ID.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Collection to register.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Collection'
        required: true
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
      security:
      - bearer: []
  /organizations/{organizationName}/collections/{collectionName}/name:
    get:
      tags:
      - organizations
      summary: Retrieve a collection by name.
      description: Retrieve a collection by name. Supports optional authentication.
      operationId: getCollectionById_1
      parameters:
      - name: organizationName
        in: path
        description: Organization name.
        required: true
        schema:
          type: string
      - name: collectionName
        in: path
        description: Collection name.
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
      security:
      - bearer: []
  /organizations/{organizationId}/collections/{collectionId}/entry:
    post:
      tags:
      - organizations
      summary: Add an entry to a collection.
      description: Add an entry to a collection.
      operationId: addEntryToCollection
      parameters:
      - name: organizationId
        in: path
        description: Organization ID.
        required: true
        schema:
          type: integer
          format: int64
      - name: collectionId
        in: path
        description: Collection ID.
        required: true
        schema:
          type: integer
          format: int64
      - name: entryId
        in: query
        description: Entry ID.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
      security:
      - bearer: []
    delete:
      tags:
      - organizations
      summary: Delete an entry to a collection.
      description: Delete an entry to a collection.
      operationId: deleteEntryFromCollection
      parameters:
      - name: organizationId
        in: path
        description: Organization ID.
        required: true
        schema:
          type: integer
          format: int64
      - name: collectionId
        in: path
        description: Collection ID.
        required: true
        schema:
          type: integer
          format: int64
      - name: entryId
        in: query
        description: Entry ID.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
      security:
      - bearer: []
  /organizations/{organizationId}/collections:
    get:
      tags:
      - organizations
      summary: Retrieve all collections for an organization.
      description: Retrieve all collections for an organization. Supports optional
        authentication.
      operationId: getCollectionsFromOrganization
      parameters:
      - name: organizationId
        in: path
        description: Organization ID.
        required: true
        schema:
          type: integer
          format: int64
      - name: include
        in: query
        description: Included fields.
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Collection'
      security:
      - bearer: []
    post:
      tags:
      - organizations
      summary: Create a collection in the given organization.
      description: Create a collection in the given organization.
      operationId: createCollection
      parameters:
      - name: organizationId
        in: path
        description: Organization ID.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Collection to register.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Collection'
        required: true
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
      security:
      - bearer: []
  /organizations/{organizationId}/collections/{collectionId}/description:
    get:
      tags:
      - organizations
      summary: Retrieve a collection description by organization ID and collection
        ID.
      description: Retrieve a collection description by organization ID and collection
        ID. Supports optional authentication.
      operationId: getCollectionDescription
      parameters:
      - name: organizationId
        in: path
        description: Organization ID.
        required: true
        schema:
          type: integer
          format: int64
      - name: collectionId
        in: path
        description: Collection ID.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
      security:
      - bearer: []
    put:
      tags:
      - organizations
      summary: Update a collection's description.
      description: Update a collection's description. Description in markdown.
      operationId: updateCollectionDescription
      parameters:
      - name: organizationId
        in: path
        description: Organization ID.
        required: true
        schema:
          type: integer
          format: int64
      - name: collectionId
        in: path
        description: Collection ID.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Collections's description in markdown.
        content:
          '*/*':
            schema:
              type: string
        required: true
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
      security:
      - bearer: []
  /entries/{id}/topic:
    post:
      tags:
      - entries
      description: Create a discourse topic for an entry.
      operationId: setDiscourseTopic
      parameters:
      - name: id
        in: path
        description: The id of the entry to add a topic to.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entry'
      security:
      - bearer: []
  /events:
    get:
      tags:
      - events
      summary: Get events based on filters.
      description: Optional authentication.
      operationId: getEvents
      parameters:
      - name: event_search_type
        in: query
        schema:
          type: string
          enum:
          - STARRED_ENTRIES
          - STARRED_ORGANIZATION
          - ALL_STARRED
      - name: limit
        in: query
        schema:
          maximum: 100
          minimum: 1
          type: integer
          format: int32
          default: 10
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
      security:
      - bearer: []
  /metadata/dockerRegistryList:
    get:
      tags:
      - metadata
      summary: Get the list of docker registries supported on Dockstore
      description: Get the list of docker registries supported on Dockstore, NO authentication
      operationId: getDockerRegistries
      responses:
        default:
          description: List of Docker registries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RegistryBean'
  /metadata/sitemap:
    get:
      tags:
      - metadata
      summary: List all available workflow, tool, organization, and collection paths.
      description: List all available workflow, tool, organization, and collection
        paths. Available means published for tools/workflows, and approved for organizations
        and their respective collections. NO authentication
      operationId: sitemap
      responses:
        default:
          description: default response
          content:
            text/html:
              schema:
                type: string
            text/xml:
              schema:
                type: string
  /metadata/rss:
    get:
      tags:
      - metadata
      summary: List all published tools and workflows in creation order
      description: List all published tools and workflows in creation order, NO authentication
      operationId: rssFeed
      responses:
        default:
          description: default response
          content:
            text/xml:
              schema:
                type: string
  /metadata/runner_dependencies:
    get:
      tags:
      - metadata
      summary: Returns the file containing runner dependencies
      description: Returns the file containing runner dependencies, NO authentication
      operationId: getRunnerDependencies
      parameters:
      - name: client_version
        in: query
        description: The Dockstore client version
        schema:
          type: string
      - name: python_version
        in: query
        description: Python version, only relevant for the cwltool runner
        schema:
          type: string
          default: "2"
      - name: runner
        in: query
        description: The tool runner
        schema:
          type: string
          default: cwltool
          enum:
          - cwltool
      - name: output
        in: query
        description: Response type
        schema:
          type: string
          default: text
          enum:
          - json
          - text
      responses:
        default:
          description: The requirements.txt file
          content:
            application/json:
              schema:
                type: string
  /metadata/sourceControlList:
    get:
      tags:
      - metadata
      summary: Get the list of source controls supported on Dockstore
      description: Get the list of source controls supported on Dockstore, NO authentication
      operationId: getSourceControlList
      responses:
        default:
          description: List of source control repositories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SourceControlBean'
  /metadata/descriptorLanguageList:
    get:
      tags:
      - metadata
      summary: Get the list of descriptor languages supported on Dockstore
      description: Get the list of descriptor languages supported on Dockstore, NO
        authentication
      operationId: getDescriptorLanguages
      responses:
        default:
          description: List of descriptor languages
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DescriptorLanguageBean'
  /metadata/okHttpCachePerformance:
    get:
      tags:
      - metadata
      summary: Get measures of cache performance
      description: Get measures of cache performance, NO authentication
      operationId: getCachePerformance
      responses:
        default:
          description: Cache performance information
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
  /metadata/elasticSearch:
    get:
      tags:
      - metadata
      summary: Successful response if elastic search is up and running
      description: Successful response if elastic search is up and running, NO authentication
      operationId: checkElasticSearch
      responses:
        default:
          description: default response
          content:
            text/html: {}
            text/xml: {}
  /metadata/config.json:
    get:
      tags:
      - metadata
      summary: Configuration for UI clients of the API
      description: Configuration, NO authentication
      operationId: getConfig
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config'
  /organizations/{organizationId}/reject:
    post:
      tags:
      - organizations
      summary: Reject an organization.
      description: Reject the organization with the given id. Admin/curator only.
      operationId: rejectOrganization
      parameters:
      - name: organizationId
        in: path
        description: Organization ID.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
      security:
      - bearer: []
  /organizations/{organizationId}/request:
    post:
      tags:
      - organizations
      summary: Re-request an organization review.
      description: Re-request a review of the given organization. Requires the organization
        to be rejected.
      operationId: requestOrganizationReview
      parameters:
      - name: organizationId
        in: path
        description: Organization ID.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
      security:
      - bearer: []
  /organizations/name/{name}:
    get:
      tags:
      - organizations
      summary: Retrieve an organization by name.
      description: Retrieve an organization by name. Supports optional authentication.
      operationId: getOrganizationByName
      parameters:
      - name: name
        in: path
        description: Organization name.
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
      security:
      - bearer: []
  /organizations/{organizationId}:
    get:
      tags:
      - organizations
      summary: Retrieve an organization by ID.
      description: Retrieve an organization by ID. Supports optional authentication.
      operationId: getOrganizationById
      parameters:
      - name: organizationId
        in: path
        description: Organization ID.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
      security:
      - bearer: []
    put:
      tags:
      - organizations
      summary: Update an organization.
      description: Update an organization. Currently only name, display name, description,
        topic, email, link, avatarUrl, and location can be updated.
      operationId: updateOrganization
      parameters:
      - name: organizationId
        in: path
        description: Organization ID.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Organization to register.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Organization'
        required: true
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
      security:
      - bearer: []
  /organizations:
    get:
      tags:
      - organizations
      summary: List all available organizations.
      description: List all organizations that have been approved by a curator or
        admin, sorted by number of stars.
      operationId: getApprovedOrganizations
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
    post:
      tags:
      - organizations
      summary: Create an organization.
      description: Create an organization. Organization requires approval by an admin
        before being made public.
      operationId: createOrganization
      requestBody:
        description: Organization to register.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Organization'
        required: true
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
      security:
      - bearer: []
  /organizations/{organizationId}/approve:
    post:
      tags:
      - organizations
      summary: Approve an organization.
      description: Approve the organization with the given id. Admin/curator only.
      operationId: approveOrganization
      parameters:
      - name: organizationId
        in: path
        description: Organization ID.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
      security:
      - bearer: []
  /organizations/{organizationId}/description:
    get:
      tags:
      - organizations
      summary: Retrieve an organization description by organization ID.
      description: Retrieve an organization description by organization ID. Supports
        optional authentication.
      operationId: getOrganizationDescription
      parameters:
      - name: organizationId
        in: path
        description: Organization ID.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
      security:
      - bearer: []
    put:
      tags:
      - organizations
      summary: Update an organization's description.
      description: Update an organization's description. Expects description in markdown
        format.
      operationId: updateOrganizationDescription
      parameters:
      - name: organizationId
        in: path
        description: Organization ID.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Organization's description in markdown.
        content:
          '*/*':
            schema:
              type: string
        required: true
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
      security:
      - bearer: []
  /organizations/{organizationId}/members:
    get:
      tags:
      - organizations
      summary: Retrieve all members for an organization.
      description: Retrieve all members for an organization. Supports optional authentication.
      operationId: getOrganizationMembers
      parameters:
      - name: organizationId
        in: path
        description: Organization ID.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationUser'
      security:
      - bearer: []
  /organizations/{organizationId}/events:
    get:
      tags:
      - organizations
      summary: Retrieve all events for an organization.
      description: Retrieve all events for an organization. Supports optional authentication.
      operationId: getOrganizationEvents
      parameters:
      - name: organizationId
        in: path
        description: Organization ID.
        required: true
        schema:
          type: integer
          format: int64
      - name: offset
        in: query
        description: Start index of paging.  If this exceeds the current result set
          return an empty set.  If not specified in the request, this will start at
          the beginning of the results.
        required: true
        schema:
          type: integer
          format: int32
          default: 0
      - name: limit
        in: query
        description: Amount of records to return in a given page, limited to 100
        required: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          format: int32
          default: 100
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/User'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
      security:
      - bearer: []
  /organizations/{organizationId}/star:
    put:
      tags:
      - organizations
      summary: Star an organization.
      description: Star an organization.
      operationId: starOrganization
      parameters:
      - name: organizationId
        in: path
        description: Organization ID.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: StarRequest to star an organization for a user.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/StarRequest'
        required: true
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - bearer: []
  /organizations/{organizationId}/unstar:
    delete:
      tags:
      - organizations
      summary: Unstar an organization.
      description: Unstar an organization.
      operationId: unstarOrganization
      parameters:
      - name: organizationId
        in: path
        description: Organization ID.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - bearer: []
  /organizations/{organizationId}/starredUsers:
    get:
      tags:
      - organizations
      summary: Return list of users who starred the given approved organization.
      description: Return list of users who starred the given approved organization.
      operationId: getStarredUsersForApprovedOrganization
      parameters:
      - name: organizationId
        in: path
        description: Organization ID.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /organizations/all:
    get:
      tags:
      - organizations
      summary: List all organizations.
      description: List all organizations, regardless of organization status. Admin/curator
        only.
      operationId: getAllOrganizations
      parameters:
      - name: type
        in: query
        description: Filter to apply to organizations.
        required: true
        schema:
          type: string
          enum:
          - all
          - pending
          - rejected
          - approved
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
      security:
      - bearer: []
  /organizations/{organizationId}/users/{username}:
    put:
      tags:
      - organizations
      summary: Add a user role to an organization.
      description: Add a user role to an organization.
      operationId: addUserToOrgByUsername
      parameters:
      - name: username
        in: path
        description: User to add to org.
        required: true
        schema:
          type: string
      - name: organizationId
        in: path
        description: Organization ID.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Role of user.
        content:
          '*/*':
            schema:
              type: string
              enum:
              - MAINTAINER
              - MEMBER
        required: true
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUser'
      security:
      - bearer: []
  /organizations/{organizationId}/user:
    put:
      tags:
      - organizations
      summary: Add a user role to an organization.
      description: Add a user role to an organization.
      operationId: addUserToOrg
      parameters:
      - name: role
        in: query
        description: Role of user.
        required: true
        schema:
          type: string
          enum:
          - MAINTAINER
          - MEMBER
      - name: userId
        in: query
        description: User ID of user to add to organization.
        required: true
        schema:
          type: integer
          format: int64
      - name: organizationId
        in: path
        description: Organization ID.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: This is here to appease Swagger. It requires PUT methods to have
          a body, even if it is empty. Please leave it empty.
        content:
          '*/*':
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUser'
      security:
      - bearer: []
    post:
      tags:
      - organizations
      summary: Update a user role in an organization.
      description: Update a user role in an organization.
      operationId: updateUserRole
      parameters:
      - name: role
        in: query
        description: Role of user.
        required: true
        schema:
          type: string
          enum:
          - MAINTAINER
          - MEMBER
      - name: userId
        in: query
        description: User ID of user to add to organization.
        required: true
        schema:
          type: integer
          format: int64
      - name: organizationId
        in: path
        description: Organization ID.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUser'
      security:
      - bearer: []
    delete:
      tags:
      - organizations
      summary: Remove a user from an organization.
      description: Remove a user from an organization.
      operationId: deleteUserRole
      parameters:
      - name: userId
        in: query
        description: User ID of user to add to organization.
        required: true
        schema:
          type: integer
          format: int64
      - name: organizationId
        in: path
        description: Organization ID.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - bearer: []
  /organizations/{organizationId}/invitation:
    post:
      tags:
      - organizations
      summary: Accept or reject an organization invitation.
      description: Accept or reject an organization invitation. True accepts the invitation,
        false rejects the invitation.
      operationId: acceptOrRejectInvitation
      parameters:
      - name: organizationId
        in: path
        description: Organization ID.
        required: true
        schema:
          type: integer
          format: int64
      - name: accept
        in: query
        description: Accept or reject.
        required: true
        schema:
          type: boolean
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - bearer: []
  /organizations/{organizationId}/aliases:
    post:
      tags:
      - organizations
      summary: Add aliases linked to a listing in Dockstore.
      description: Add aliases linked to a listing in Dockstore. Aliases are alphanumerical
        (case-insensitive and may contain internal hyphens), given in a comma-delimited
        list.
      operationId: addOrganizationAliases_1
      parameters:
      - name: organizationId
        in: path
        description: Organization to modify.
        required: true
        schema:
          type: integer
          format: int64
      - name: aliases
        in: query
        description: Comma-delimited list of aliases.
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Aliasable'
      security:
      - bearer: []
  /organizations/{alias}/aliases:
    get:
      tags:
      - organizations
      summary: Retrieve an organization by alias.
      description: Retrieve an organization by alias.
      operationId: getOrganizationByAlias
      parameters:
      - name: alias
        in: path
        description: Alias.
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
  /toolTester/logs/search:
    get:
      tags:
      - toolTester
      summary: Search for ToolTester log files
      operationId: search
      parameters:
      - name: tool_id
        in: query
        description: TRS Tool Id
        required: true
        schema:
          type: string
        example: '#workflow/github.com/dockstore/hello_world'
      - name: tool_version_name
        in: query
        required: true
        schema:
          type: string
        example: v1.0.0
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ToolTesterLog'
  /toolTester/logs:
    get:
      tags:
      - toolTester
      summary: Get ToolTester log file
      operationId: getToolTesterLog
      parameters:
      - name: tool_id
        in: query
        description: TRS Tool Id
        required: true
        schema:
          type: string
        example: '#workflow/github.com/dockstore/hello_world'
      - name: tool_version_name
        in: query
        required: true
        schema:
          type: string
        example: v1.0.0
      - name: test_filename
        in: query
        required: true
        schema:
          type: string
        example: hello_world.cwl.json
      - name: runner
        in: query
        required: true
        schema:
          type: string
        example: cwltool
      - name: log_type
        in: query
        required: true
        schema:
          type: string
          enum:
          - FULL
          - SUMMARY
      - name: filename
        in: query
        required: true
        schema:
          type: string
        example: 1554477737092.log
      responses:
        default:
          description: default response
          content:
            text/plain:
              schema:
                type: string
  /users/{userId}:
    get:
      tags:
      - users
      operationId: getSpecificUser
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/User'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /users/user:
    get:
      tags:
      - users
      operationId: getUser
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/User'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /users/users/organizations:
    get:
      tags:
      - users
      description: Get all of the Dockstore organizations for a user, sorted by most
        recently updated.
      operationId: getUserDockstoreOrganizations
      parameters:
      - name: count
        in: query
        description: Maximum number of organizations to return
        schema:
          type: integer
          format: int32
      - name: filter
        in: query
        description: Filter paths with matching text
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationUpdateTime'
      security:
      - bearer: []
  /users/users/entries:
    get:
      tags:
      - users
      description: Get all of the entries for a user, sorted by most recently updated.
      operationId: getUserEntries
      parameters:
      - name: count
        in: query
        description: Maximum number of entries to return
        schema:
          type: integer
          format: int32
      - name: filter
        in: query
        description: Filter paths with matching text
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EntryUpdateTime'
      security:
      - bearer: []
  /users/registries:
    get:
      tags:
      - users
      description: Get all of the git registries accessible to the logged in user.
      operationId: getUserRegistries
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  enum:
                  - dockstore.org
                  - github.com
                  - bitbucket.org
                  - gitlab.com
      security:
      - bearer: []
  /users/registries/{gitRegistry}/organizations:
    get:
      tags:
      - users
      description: Get all of the organizations for a given git registry accessible
        to the logged in user.
      operationId: getUserOrganizations
      parameters:
      - name: gitRegistry
        in: path
        description: Git registry
        required: true
        schema:
          type: string
          enum:
          - dockstore.org
          - github.com
          - bitbucket.org
          - gitlab.com
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  type: string
      security:
      - bearer: []
  /users/registries/{gitRegistry}/organizations/{organization}:
    get:
      tags:
      - users
      description: Get all of the repositories for an organization for a given git
        registry accessible to the logged in user.
      operationId: getUserOrganizationRepositories
      parameters:
      - name: gitRegistry
        in: path
        description: Git registry
        required: true
        schema:
          type: string
          enum:
          - dockstore.org
          - github.com
          - bitbucket.org
          - gitlab.com
      - name: organization
        in: path
        description: Git organization
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Repository'
      security:
      - bearer: []
  /workflows/registries/{gitRegistry}/organizations/{organization}/repositories/{repositoryName}:
    post:
      tags:
      - workflows
      description: Adds a workflow for a registry and repository path with defaults
        set.
      operationId: addWorkflow
      parameters:
      - name: gitRegistry
        in: path
        description: Git registry
        required: true
        schema:
          type: string
          enum:
          - dockstore.org
          - github.com
          - bitbucket.org
          - gitlab.com
      - name: organization
        in: path
        description: Git repository organization
        required: true
        schema:
          type: string
      - name: repositoryName
        in: path
        description: Git repository name
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BioWorkflow'
      security:
      - bearer: []
    delete:
      tags:
      - workflows
      description: Delete a stubbed workflow for a registry and repository path.
      operationId: deleteWorkflow
      parameters:
      - name: gitRegistry
        in: path
        description: Git registry
        required: true
        schema:
          type: string
          enum:
          - dockstore.org
          - github.com
          - bitbucket.org
          - gitlab.com
      - name: organization
        in: path
        description: Git repository organization
        required: true
        schema:
          type: string
      - name: repositoryName
        in: path
        description: Git repository name
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - bearer: []
components:
  schemas:
    Alias:
      type: object
      properties:
        content:
          type: string
    Checksum:
      type: object
      properties:
        type:
          type: string
        checksum:
          type: string
    Collection:
      required:
      - name
      - topic
      type: object
      properties:
        id:
          type: integer
          description: Implementation specific ID for the collection in this web service
          format: int64
        name:
          maxLength: 39
          minLength: 3
          pattern: '[a-zA-Z][a-zA-Z\d]*'
          type: string
          description: Name of the collection
          example: Alignment
        description:
          type: string
          description: Description of the collection
        displayName:
          maxLength: 50
          minLength: 3
          pattern: '[\w ,_\-&()'']*'
          type: string
        topic:
          type: string
          description: Short description of the collection
          example: A collection of alignment algorithms
        entries:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Entry'
        organizationID:
          type: integer
          format: int64
        aliases:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Alias'
        dbCreateDate:
          type: string
          format: date-time
        dbUpdateDate:
          type: string
          format: date-time
        organizationName:
          type: string
      description: Collection in an organization, collects entries
    Entry:
      type: object
      properties:
        id:
          type: integer
          format: int64
        author:
          type: string
        description:
          type: string
        labels:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Label'
        users:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/User'
        starredUsers:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/User'
        email:
          type: string
        defaultVersion:
          type: string
        lastUpdated:
          type: string
          format: date-time
        gitUrl:
          type: string
        aliases:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Alias'
        dbCreateDate:
          type: string
          format: date-time
        dbUpdateDate:
          type: string
          format: date-time
        topicId:
          type: integer
          format: int64
        conceptDoi:
          type: string
        workflowVersions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Version'
        metadataFromEntry:
          $ref: '#/components/schemas/Entry'
        metadataFromVersion:
          $ref: '#/components/schemas/Version'
        is_published:
          type: boolean
        last_modified:
          type: integer
          format: int32
        checker_id:
          type: integer
          format: int64
        has_checker:
          type: boolean
        input_file_formats:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FileFormat'
        output_file_formats:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FileFormat'
        last_modified_date:
          type: string
          format: date-time
      writeOnly: true
    FileFormat:
      type: object
      properties:
        value:
          type: string
    Image:
      type: object
      properties:
        checksums:
          type: array
          items:
            $ref: '#/components/schemas/Checksum'
        repository:
          type: string
        tag:
          type: string
        imageID:
          type: string
    Label:
      type: object
      properties:
        id:
          type: integer
          format: int64
        value:
          type: string
    Profile:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        avatarURL:
          type: string
        company:
          type: string
        location:
          type: string
        bio:
          type: string
        username:
          type: string
    SourceFile:
      type: object
      properties:
        id:
          type: integer
          format: int64
        type:
          type: string
          enum:
          - DOCKSTORE_CWL
          - DOCKSTORE_WDL
          - DOCKERFILE
          - CWL_TEST_JSON
          - WDL_TEST_JSON
          - NEXTFLOW
          - NEXTFLOW_CONFIG
          - NEXTFLOW_TEST_PARAMS
          - DOCKSTORE_YML
          - DOCKSTORE_SERVICE_YML
          - DOCKSTORE_SERVICE_TEST_JSON
          - DOCKSTORE_SERVICE_OTHER
        content:
          type: string
        path:
          type: string
        absolutePath:
          type: string
        frozen:
          type: boolean
        verifiedBySource:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/VerificationInformation'
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        isAdmin:
          type: boolean
        userProfiles:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Profile'
        avatarUrl:
          type: string
        curator:
          type: boolean
        setupComplete:
          type: boolean
        privacyPolicyVersion:
          type: string
          enum:
          - NONE
          - PRIVACY_POLICY_VERSION_2_5
        privacyPolicyVersionAcceptanceDate:
          type: string
          format: date-time
        name:
          type: string
        tosversion:
          type: string
          enum:
          - NONE
          - TOS_VERSION_1
        tosversionAcceptanceDate:
          type: string
          format: date-time
          writeOnly: true
        tosacceptanceDate:
          type: string
          format: date-time
    Validation:
      type: object
      properties:
        id:
          type: integer
          format: int64
        type:
          type: string
          enum:
          - DOCKSTORE_CWL
          - DOCKSTORE_WDL
          - DOCKERFILE
          - CWL_TEST_JSON
          - WDL_TEST_JSON
          - NEXTFLOW
          - NEXTFLOW_CONFIG
          - NEXTFLOW_TEST_PARAMS
          - DOCKSTORE_YML
          - DOCKSTORE_SERVICE_YML
          - DOCKSTORE_SERVICE_TEST_JSON
          - DOCKSTORE_SERVICE_OTHER
        valid:
          type: boolean
        message:
          type: string
    VerificationInformation:
      type: object
      properties:
        verified:
          type: boolean
        metadata:
          type: string
        platformVersion:
          type: string
    Version:
      type: object
      properties:
        id:
          type: integer
          format: int64
        reference:
          type: string
        name:
          type: string
        commitID:
          type: string
        frozen:
          type: boolean
        referenceType:
          type: string
          enum:
          - COMMIT
          - TAG
          - BRANCH
          - NOT_APPLICABLE
          - UNSET
        sourceFiles:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/SourceFile'
        valid:
          type: boolean
        dirtyBit:
          type: boolean
        versionEditor:
          $ref: '#/components/schemas/User'
        validations:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Validation'
        images:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Image'
        hidden:
          type: boolean
        doiURL:
          type: string
        author:
          type: string
        verified:
          type: boolean
        verifiedSource:
          type: string
        verifiedSources:
          type: array
          items:
            type: string
        doiStatus:
          type: string
          enum:
          - NOT_REQUESTED
          - REQUESTED
          - CREATED
        descriptionSource:
          type: string
          enum:
          - README
          - DESCRIPTOR
        workingDirectory:
          type: string
        description:
          type: string
        email:
          type: string
        dbUpdateDate:
          type: string
          format: date-time
        input_file_formats:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FileFormat'
        output_file_formats:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FileFormat'
    Aliasable:
      type: object
      properties:
        aliases:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Alias'
    BioWorkflow:
      type: object
      properties:
        descriptorType:
          type: string
          enum:
          - CWL
          - WDL
          - NFL
          - service
          
          
        id:
          type: integer
          format: int64
        author:
          type: string
        description:
          type: string
        labels:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Label'
        users:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/User'
        starredUsers:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/User'
        email:
          type: string
        defaultVersion:
          type: string
        lastUpdated:
          type: string
          format: date-time
        gitUrl:
          type: string
        aliases:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Alias'
        dbCreateDate:
          type: string
          format: date-time
        dbUpdateDate:
          type: string
          format: date-time
        topicId:
          type: integer
          format: int64
        conceptDoi:
          type: string
        mode:
          type: string
          enum:
          - FULL
          - STUB
          - HOSTED
          - SERVICE
        workflowName:
          type: string
        organization:
          type: string
        repository:
          type: string
        sourceControl:
          type: string
          enum:
          - dockstore.org
          - github.com
          - bitbucket.org
          - gitlab.com
        workflowVersions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/WorkflowVersion'
        path:
          type: string
        metadataFromEntry:
          $ref: '#/components/schemas/Workflow'
        metadataFromVersion:
          $ref: '#/components/schemas/Version'
        is_published:
          type: boolean
        last_modified:
          type: integer
          format: int32
        is_checker:
          type: boolean
        parent_id:
          type: integer
          format: int64
        full_workflow_path:
          type: string
        workflow_path:
          type: string
        defaultTestParameterFilePath:
          type: string
        source_control_provider:
          type: string
        checker_id:
          type: integer
          format: int64
        has_checker:
          type: boolean
        input_file_formats:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FileFormat'
        output_file_formats:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FileFormat'
        last_modified_date:
          type: string
          format: date-time
    Event:
      type: object
      properties:
        id:
          type: integer
          format: int64
        user:
          $ref: '#/components/schemas/User'
        organization:
          $ref: '#/components/schemas/Organization'
        tool:
          $ref: '#/components/schemas/Tool'
        workflow:
          $ref: '#/components/schemas/Workflow'
        collection:
          $ref: '#/components/schemas/Collection'
        initiatorUser:
          $ref: '#/components/schemas/User'
        type:
          type: string
          enum:
          - CREATE_ORG
          - DELETE_ORG
          - MODIFY_ORG
          - APPROVE_ORG
          - REJECT_ORG
          - REREQUEST_ORG
          - ADD_USER_TO_ORG
          - REMOVE_USER_FROM_ORG
          - MODIFY_USER_ROLE_ORG
          - APPROVE_ORG_INVITE
          - REJECT_ORG_INVITE
          - CREATE_COLLECTION
          - MODIFY_COLLECTION
          - REMOVE_FROM_COLLECTION
          - ADD_TO_COLLECTION
          - ADD_VERSION_TO_ENTRY
        dbCreateDate:
          type: string
          format: date-time
        dbUpdateDate:
          type: string
          format: date-time
    Organization:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          maxLength: 39
          minLength: 3
          pattern: '[a-zA-Z][a-zA-Z\d]*'
          type: string
        description:
          type: string
        link:
          type: string
        location:
          type: string
        email:
          type: string
        status:
          type: string
          enum:
          - PENDING
          - REJECTED
          - APPROVED
        users:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/OrganizationUser'
        topic:
          type: string
        displayName:
          maxLength: 50
          minLength: 3
          pattern: '[\w ,_\-&()'']*'
          type: string
        starredUsers:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/User'
        aliases:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Alias'
        dbCreateDate:
          type: string
          format: date-time
        dbUpdateDate:
          type: string
          format: date-time
        avatarUrl:
          pattern: ([^\s]+)(?i)(\.jpg|\.jpeg|\.png|\.gif)
          type: string
    OrganizationUser:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/OrganizationUserId'
        user:
          $ref: '#/components/schemas/User'
        organization:
          $ref: '#/components/schemas/Organization'
        role:
          type: string
          enum:
          - MAINTAINER
          - MEMBER
        accepted:
          type: boolean
        dbCreateDate:
          type: string
          format: date-time
        dbUpdateDate:
          type: string
          format: date-time
    OrganizationUserId:
      type: object
      properties:
        userId:
          type: integer
          format: int64
        organizationId:
          type: integer
          format: int64
    Service:
      type: object
      allOf:
      - $ref: '#/components/schemas/Workflow'
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        reference:
          type: string
        name:
          type: string
        commitID:
          type: string
        frozen:
          type: boolean
        referenceType:
          type: string
          enum:
          - COMMIT
          - TAG
          - BRANCH
          - NOT_APPLICABLE
          - UNSET
        sourceFiles:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/SourceFile'
        valid:
          type: boolean
        dirtyBit:
          type: boolean
        versionEditor:
          $ref: '#/components/schemas/User'
        validations:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Validation'
        images:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Image'
        size:
          type: integer
          format: int64
        automated:
          type: boolean
        workingDirectory:
          type: string
        hidden:
          type: boolean
        doiURL:
          type: string
        author:
          type: string
        verified:
          type: boolean
        verifiedSource:
          type: string
        verifiedSources:
          type: array
          items:
            type: string
        doiStatus:
          type: string
          enum:
          - NOT_REQUESTED
          - REQUESTED
          - CREATED
        descriptionSource:
          type: string
          enum:
          - README
          - DESCRIPTOR
        description:
          type: string
        email:
          type: string
        dbUpdateDate:
          type: string
          format: date-time
        input_file_formats:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FileFormat'
        output_file_formats:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FileFormat'
        last_built:
          type: string
          format: date-time
        image_id:
          type: string
        dockerfile_path:
          type: string
        cwl_path:
          type: string
        wdl_path:
          type: string
    Tool:
      type: object
      properties:
        id:
          type: integer
          format: int64
        author:
          type: string
        description:
          type: string
        labels:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Label'
        users:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/User'
        starredUsers:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/User'
        email:
          type: string
        defaultVersion:
          type: string
        lastUpdated:
          type: string
          format: date-time
        gitUrl:
          type: string
        aliases:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Alias'
        dbCreateDate:
          type: string
          format: date-time
        dbUpdateDate:
          type: string
          format: date-time
        topicId:
          type: integer
          format: int64
        conceptDoi:
          type: string
        mode:
          type: string
          enum:
          - AUTO_DETECT_QUAY_TAGS_AUTOMATED_BUILDS
          - AUTO_DETECT_QUAY_TAGS_WITH_MIXED
          - MANUAL_IMAGE_PATH
          - HOSTED
        name:
          type: string
        toolname:
          type: string
        namespace:
          type: string
        lastBuild:
          type: string
          format: date-time
        workflowVersions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        tags:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        path:
          type: string
        customerDockerRegistryPath:
          type: string
          writeOnly: true
        descriptorType:
          type: array
          items:
            type: string
        metadataFromEntry:
          $ref: '#/components/schemas/Tool'
        metadataFromVersion:
          $ref: '#/components/schemas/Version'
        is_published:
          type: boolean
        last_modified:
          type: integer
          format: int32
        tool_maintainer_email:
          type: string
        private_access:
          type: boolean
        registry_string:
          type: string
        registry:
          type: integer
          format: int32
        custom_docker_registry_path:
          type: string
        tool_path:
          type: string
        default_cwl_path:
          type: string
        default_wdl_path:
          type: string
        default_dockerfile_path:
          type: string
        defaultCWLTestParameterFile:
          type: string
        defaultWDLTestParameterFile:
          type: string
        checker_id:
          type: integer
          format: int64
        has_checker:
          type: boolean
        input_file_formats:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FileFormat'
        output_file_formats:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FileFormat'
        last_modified_date:
          type: string
          format: date-time
    Workflow:
      required:
      - type
      type: object
      properties:
        descriptorType:
          type: string
          enum:
          - CWL
          - WDL
          - NFL
          - service
          
          
        id:
          type: integer
          format: int64
        author:
          type: string
        description:
          type: string
        labels:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Label'
        users:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/User'
        starredUsers:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/User'
        email:
          type: string
        defaultVersion:
          type: string
        lastUpdated:
          type: string
          format: date-time
        gitUrl:
          type: string
        aliases:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Alias'
        dbCreateDate:
          type: string
          format: date-time
        dbUpdateDate:
          type: string
          format: date-time
        topicId:
          type: integer
          format: int64
        conceptDoi:
          type: string
        mode:
          type: string
          enum:
          - FULL
          - STUB
          - HOSTED
          - SERVICE
        workflowName:
          type: string
        organization:
          type: string
        repository:
          type: string
        sourceControl:
          type: string
          enum:
          - dockstore.org
          - github.com
          - bitbucket.org
          - gitlab.com
        workflowVersions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/WorkflowVersion'
        path:
          type: string
        isChecker:
          type: boolean
        parentEntry:
          $ref: '#/components/schemas/Entry'
        metadataFromEntry:
          $ref: '#/components/schemas/Workflow'
        metadataFromVersion:
          $ref: '#/components/schemas/Version'
        is_published:
          type: boolean
        last_modified:
          type: integer
          format: int32
        full_workflow_path:
          type: string
        workflow_path:
          type: string
        defaultTestParameterFilePath:
          type: string
        source_control_provider:
          type: string
        checker_id:
          type: integer
          format: int64
        has_checker:
          type: boolean
        input_file_formats:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FileFormat'
        output_file_formats:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FileFormat'
        last_modified_date:
          type: string
          format: date-time
        type:
          type: string
      writeOnly: true
      discriminator:
        propertyName: type
    WorkflowVersion:
      type: object
      properties:
        id:
          type: integer
          format: int64
        reference:
          type: string
        name:
          type: string
        commitID:
          type: string
        frozen:
          type: boolean
        referenceType:
          type: string
          enum:
          - COMMIT
          - TAG
          - BRANCH
          - NOT_APPLICABLE
          - UNSET
        sourceFiles:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/SourceFile'
        valid:
          type: boolean
        dirtyBit:
          type: boolean
        versionEditor:
          $ref: '#/components/schemas/User'
        validations:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Validation'
        images:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Image'
        aliases:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Alias'
        subClass:
          type: string
          enum:
          - DOCKER_COMPOSE
          - SWARM
          - KUBERNETES
          - HELM
        workingDirectory:
          type: string
        hidden:
          type: boolean
        doiURL:
          type: string
        author:
          type: string
        verified:
          type: boolean
        verifiedSource:
          type: string
        verifiedSources:
          type: array
          items:
            type: string
        doiStatus:
          type: string
          enum:
          - NOT_REQUESTED
          - REQUESTED
          - CREATED
        descriptionSource:
          type: string
          enum:
          - README
          - DESCRIPTOR
        description:
          type: string
        email:
          type: string
        dbUpdateDate:
          type: string
          format: date-time
        input_file_formats:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FileFormat'
        output_file_formats:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FileFormat'
        workflow_path:
          type: string
        last_modified:
          type: string
          format: date-time
    RegistryBean:
      type: object
      properties:
        dockerPath:
          type: string
        friendlyName:
          type: string
        url:
          type: string
        privateOnly:
          type: string
        customDockerPath:
          type: string
        enum:
          type: string
    SourceControlBean:
      type: object
      properties:
        value:
          type: string
        friendlyName:
          type: string
    DescriptorLanguageBean:
      type: object
      properties:
        value:
          type: string
        friendlyName:
          type: string
    Config:
      type: object
      properties:
        dnaStackImportUrl:
          type: string
        dnaNexusImportUrl:
          type: string
        terraImportUrl:
          type: string
        gitHubAuthUrl:
          type: string
        gitHubRedirectPath:
          type: string
        gitHubScope:
          type: string
        quayIoAuthUrl:
          type: string
        quayIoRedirectPath:
          type: string
        quayIoScope:
          type: string
        bitBucketAuthUrl:
          type: string
        gitlabAuthUrl:
          type: string
        gitlabRedirectPath:
          type: string
        gitlabScope:
          type: string
        zenodoAuthUrl:
          type: string
        zenodoRedirectPath:
          type: string
        zenodoScope:
          type: string
        googleScope:
          type: string
        cwlVisualizerUri:
          type: string
        tagManagerId:
          type: string
        gitHubAppInstallationUrl:
          type: string
        documentationUrl:
          type: string
        featuredContentUrl:
          type: string
        githubClientId:
          type: string
        quayIoClientId:
          type: string
        bitBucketClientId:
          type: string
        gitlabClientId:
          type: string
        zenodoClientId:
          type: string
        googleClientId:
          type: string
        discourseUrl:
          type: string
    StarRequest:
      type: object
      properties:
        star:
          type: boolean
    ToolTesterLog:
      type: object
      properties:
        toolId:
          type: string
        toolVersionName:
          type: string
        testFilename:
          type: string
        runner:
          type: string
        logType:
          type: string
          enum:
          - FULL
          - SUMMARY
        filename:
          type: string
    OrganizationUpdateTime:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        lastUpdateDate:
          type: string
          format: date-time
    EntryUpdateTime:
      type: object
      properties:
        path:
          type: string
        prettyPath:
          type: string
        entryType:
          type: string
          enum:
          - TOOL
          - WORKFLOW
          - SERVICE
        lastUpdateDate:
          type: string
          format: date-time
    Repository:
      type: object
      properties:
        organization:
          type: string
        repositoryName:
          type: string
        gitRegistry:
          type: string
          enum:
          - dockstore.org
          - github.com
          - bitbucket.org
          - gitlab.com
        canDelete:
          type: boolean
        present:
          type: boolean
        path:
          type: string
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
