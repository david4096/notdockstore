openapi: 3.0.1
info:
  title: Dockstore
  description: The Dockstore API, includes proprietary and GA4GH V1+V2 endpoints
  termsOfService: http://swagger.io/terms/
  contact:
    name: Dockstore@ga4gh
    url: https://discuss.dockstore.org/t/opening-helpdesk-tickets/1506
    email: theglobalalliance@genomicsandhealth.org
  license:
    name: Apache 2.0
    url: https://github.com/dockstore/dockstore/blob/develop/LICENSE
  version: 1.6.0
externalDocs:
  description: User documentation for dockstore
  url: https://docs.dockstore.org/
tags:
- name: metadata
  description: description of the webservice itself
- name: toolTester
  description: Interactions with the Dockstore-support's ToolTester application
paths:
  /entries/{id}/topic:
    post:
      description: Create a discourse topic for an entry.
      operationId: setDiscourseTopic
      parameters:
      - name: id
        in: path
        description: The id of the entry to add a topic to.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entry'
      security:
      - bearer: []
  /metadata/rss:
    get:
      tags:
      - metadata
      summary: List all published tools and workflows in creation order
      description: List all published tools and workflows in creation order, NO authentication
      operationId: rssFeed
      responses:
        default:
          description: default response
          content:
            text/xml:
              schema:
                type: string
  /metadata/runner_dependencies:
    get:
      tags:
      - metadata
      summary: Returns the file containing runner dependencies
      description: Returns the file containing runner dependencies, NO authentication
      operationId: getRunnerDependencies
      parameters:
      - name: client_version
        in: query
        description: The Dockstore client version
        schema:
          type: string
      - name: python_version
        in: query
        description: Python version, only relevant for the cwltool runner
        schema:
          type: string
          default: "2"
      - name: runner
        in: query
        description: The tool runner
        schema:
          type: string
          default: cwltool
          enum:
          - cwltool
      - name: output
        in: query
        description: Response type
        schema:
          type: string
          default: text
          enum:
          - json
          - text
      responses:
        default:
          description: The requirements.txt file
          content:
            application/json:
              schema:
                type: string
  /metadata/sourceControlList:
    get:
      tags:
      - metadata
      summary: Get the list of source controls supported on Dockstore
      description: Get the list of source controls supported on Dockstore, NO authentication
      operationId: getSourceControlList
      responses:
        default:
          description: List of source control repositories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SourceControlBean'
  /metadata/descriptorLanguageList:
    get:
      tags:
      - metadata
      summary: Get the list of descriptor languages supported on Dockstore
      description: Get the list of descriptor languages supported on Dockstore, NO
        authentication
      operationId: getDescriptorLanguages
      responses:
        default:
          description: List of descriptor languages
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DescriptorLanguageBean'
  /metadata/okHttpCachePerformance:
    get:
      tags:
      - metadata
      summary: Get measures of cache performance
      description: Get measures of cache performance, NO authentication
      operationId: getCachePerformance
      responses:
        default:
          description: Cache performance information
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
  /metadata/elasticSearch:
    get:
      tags:
      - metadata
      summary: Successful response if elastic search is up and running
      description: Successful response if elastic search is up and running, NO authentication
      operationId: checkElasticSearch
      responses:
        default:
          description: default response
          content:
            text/html: {}
            text/xml: {}
  /metadata/sitemap:
    get:
      tags:
      - metadata
      summary: List all available workflow, tool, organization, and collection paths.
      description: List all available workflow, tool, organization, and collection
        paths. Available means published for tools/workflows, and approved for organizations
        and their respective collections. NO authentication
      operationId: sitemap
      responses:
        default:
          description: default response
          content:
            text/html:
              schema:
                type: string
            text/xml:
              schema:
                type: string
  /metadata/dockerRegistryList:
    get:
      tags:
      - metadata
      summary: Get the list of docker registries supported on Dockstore
      description: Get the list of docker registries supported on Dockstore, NO authentication
      operationId: getDockerRegistries
      responses:
        default:
          description: List of Docker registries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RegistryBean'
  /metadata/config.json:
    get:
      tags:
      - metadata
      summary: Configuration for UI clients of the API
      description: Configuration, NO authentication
      operationId: getConfig
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config'
  /toolTester/logs/search:
    get:
      tags:
      - toolTester
      summary: Search for ToolTester log files
      operationId: search
      parameters:
      - name: tool_id
        in: query
        description: TRS Tool Id
        required: true
        schema:
          type: string
        example: '#workflow/github.com/dockstore/hello_world'
      - name: tool_version_name
        in: query
        required: true
        schema:
          type: string
        example: v1.0.0
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ToolTesterLog'
  /toolTester/logs:
    get:
      tags:
      - toolTester
      summary: Get ToolTester log file
      operationId: getToolTesterLog
      parameters:
      - name: tool_id
        in: query
        description: TRS Tool Id
        required: true
        schema:
          type: string
        example: '#workflow/github.com/dockstore/hello_world'
      - name: tool_version_name
        in: query
        required: true
        schema:
          type: string
        example: v1.0.0
      - name: test_filename
        in: query
        required: true
        schema:
          type: string
        example: hello_world.cwl.json
      - name: runner
        in: query
        required: true
        schema:
          type: string
        example: cwltool
      - name: log_type
        in: query
        required: true
        schema:
          type: string
          enum:
          - FULL
          - SUMMARY
      - name: filename
        in: query
        required: true
        schema:
          type: string
        example: 1554477737092.log
      responses:
        default:
          description: default response
          content:
            text/plain:
              schema:
                type: string
  /users/registries:
    get:
      description: Get all of the git registries accessible to the logged in user.
      operationId: getUserRegistries
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  enum:
                  - dockstore.org
                  - github.com
                  - bitbucket.org
                  - gitlab.com
      security:
      - bearer: []
  /users/registries/{gitRegistry}/organizations:
    get:
      description: Get all of the organizations for a given git registry accessible
        to the logged in user.
      operationId: getUserOrganizations
      parameters:
      - name: gitRegistry
        in: path
        description: Git registry
        required: true
        schema:
          type: string
          enum:
          - dockstore.org
          - github.com
          - bitbucket.org
          - gitlab.com
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  type: string
      security:
      - bearer: []
  /users/registries/{gitRegistry}/organizations/{organization}:
    get:
      description: Get all of the repositories for an organization for a given git
        registry accessible to the logged in user.
      operationId: getUserOrganizationRepositories
      parameters:
      - name: gitRegistry
        in: path
        description: Git registry
        required: true
        schema:
          type: string
          enum:
          - dockstore.org
          - github.com
          - bitbucket.org
          - gitlab.com
      - name: organization
        in: path
        description: Git organization
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Repository'
      security:
      - bearer: []
  /users/users/organizations:
    get:
      description: Get all of the Dockstore organizations for a user, sorted by most
        recently updated.
      operationId: getUserDockstoreOrganizations
      parameters:
      - name: count
        in: query
        description: Maximum number of organizations to return
        schema:
          type: integer
          format: int32
      - name: filter
        in: query
        description: Filter paths with matching text
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationUpdateTime'
      security:
      - bearer: []
  /users/users/entries:
    get:
      description: Get all of the entries for a user, sorted by most recently updated.
      operationId: getUserEntries
      parameters:
      - name: count
        in: query
        description: Maximum number of entries to return
        schema:
          type: integer
          format: int32
      - name: filter
        in: query
        description: Filter paths with matching text
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EntryUpdateTime'
      security:
      - bearer: []
  /users/{userId}:
    get:
      operationId: getSpecificUser
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/User'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /users/user:
    get:
      operationId: getUser
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/User'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /workflows/registries/{gitRegistry}/organizations/{organization}/repositories/{repositoryName}:
    post:
      description: Adds a workflow for a registry and repository path with defaults
        set.
      operationId: addWorkflow
      parameters:
      - name: gitRegistry
        in: path
        description: Git registry
        required: true
        schema:
          type: string
          enum:
          - dockstore.org
          - github.com
          - bitbucket.org
          - gitlab.com
      - name: organization
        in: path
        description: Git repository organization
        required: true
        schema:
          type: string
      - name: repositoryName
        in: path
        description: Git repository name
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BioWorkflow'
      security:
      - bearer: []
    delete:
      description: Delete a stubbed workflow for a registry and repository path.
      operationId: deleteWorkflow
      parameters:
      - name: gitRegistry
        in: path
        description: Git registry
        required: true
        schema:
          type: string
          enum:
          - dockstore.org
          - github.com
          - bitbucket.org
          - gitlab.com
      - name: organization
        in: path
        description: Git repository organization
        required: true
        schema:
          type: string
      - name: repositoryName
        in: path
        description: Git repository name
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - bearer: []
components:
  schemas:
    Alias:
      type: object
      properties:
        content:
          type: string
    Checksum:
      type: object
      properties:
        type:
          type: string
        checksum:
          type: string
    Entry:
      type: object
      properties:
        id:
          type: integer
          format: int64
        author:
          type: string
        description:
          type: string
        labels:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Label'
        users:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/User'
        starredUsers:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/User'
        email:
          type: string
        defaultVersion:
          type: string
        lastUpdated:
          type: string
          format: date-time
        gitUrl:
          type: string
        aliases:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Alias'
        dbCreateDate:
          type: string
          format: date-time
        dbUpdateDate:
          type: string
          format: date-time
        topicId:
          type: integer
          format: int64
        conceptDoi:
          type: string
        workflowVersions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Version'
        metadata:
          $ref: '#/components/schemas/Version'
        is_published:
          type: boolean
        last_modified:
          type: integer
          format: int32
        has_checker:
          type: boolean
        input_file_formats:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FileFormat'
        output_file_formats:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FileFormat'
        checker_id:
          type: integer
          format: int64
        last_modified_date:
          type: string
          format: date-time
    FileFormat:
      type: object
      properties:
        value:
          type: string
    Image:
      type: object
      properties:
        checksums:
          type: array
          items:
            $ref: '#/components/schemas/Checksum'
        repository:
          type: string
        tag:
          type: string
        imageID:
          type: string
    Label:
      type: object
      properties:
        id:
          type: integer
          format: int64
        value:
          type: string
    Profile:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        avatarURL:
          type: string
        company:
          type: string
        location:
          type: string
        bio:
          type: string
        username:
          type: string
    SourceFile:
      type: object
      properties:
        id:
          type: integer
          format: int64
        type:
          type: string
          enum:
          - DOCKSTORE_CWL
          - DOCKSTORE_WDL
          - DOCKERFILE
          - CWL_TEST_JSON
          - WDL_TEST_JSON
          - NEXTFLOW
          - NEXTFLOW_CONFIG
          - NEXTFLOW_TEST_PARAMS
          - DOCKSTORE_YML
          - DOCKSTORE_SERVICE_YML
          - DOCKSTORE_SERVICE_TEST_JSON
          - DOCKSTORE_SERVICE_OTHER
        content:
          type: string
        path:
          type: string
        absolutePath:
          type: string
        frozen:
          type: boolean
        verifiedBySource:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/VerificationInformation'
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        isAdmin:
          type: boolean
        userProfiles:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Profile'
        avatarUrl:
          type: string
        curator:
          type: boolean
        setupComplete:
          type: boolean
        privacyPolicyVersion:
          type: string
          enum:
          - NONE
          - PRIVACY_POLICY_VERSION_2_5
        privacyPolicyVersionAcceptanceDate:
          type: string
          format: date-time
        name:
          type: string
        tosacceptanceDate:
          type: string
          format: date-time
        tosversion:
          type: string
          enum:
          - NONE
          - TOS_VERSION_1
        tosversionAcceptanceDate:
          type: string
          format: date-time
          writeOnly: true
    Validation:
      type: object
      properties:
        id:
          type: integer
          format: int64
        type:
          type: string
          enum:
          - DOCKSTORE_CWL
          - DOCKSTORE_WDL
          - DOCKERFILE
          - CWL_TEST_JSON
          - WDL_TEST_JSON
          - NEXTFLOW
          - NEXTFLOW_CONFIG
          - NEXTFLOW_TEST_PARAMS
          - DOCKSTORE_YML
          - DOCKSTORE_SERVICE_YML
          - DOCKSTORE_SERVICE_TEST_JSON
          - DOCKSTORE_SERVICE_OTHER
        valid:
          type: boolean
        message:
          type: string
    VerificationInformation:
      type: object
      properties:
        verified:
          type: boolean
        metadata:
          type: string
        platformVersion:
          type: string
    Version:
      type: object
      properties:
        id:
          type: integer
          format: int64
        reference:
          type: string
        name:
          type: string
        commitID:
          type: string
        frozen:
          type: boolean
        referenceType:
          type: string
          enum:
          - COMMIT
          - TAG
          - BRANCH
          - NOT_APPLICABLE
          - UNSET
        sourceFiles:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/SourceFile'
        valid:
          type: boolean
        dirtyBit:
          type: boolean
        versionEditor:
          $ref: '#/components/schemas/User'
        validations:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Validation'
        images:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Image'
        hidden:
          type: boolean
        verified:
          type: boolean
        verifiedSource:
          type: string
        verifiedSources:
          type: array
          items:
            type: string
        doiURL:
          type: string
        doiStatus:
          type: string
          enum:
          - NOT_REQUESTED
          - REQUESTED
          - CREATED
        author:
          type: string
        workingDirectory:
          type: string
        description:
          type: string
        email:
          type: string
        dbUpdateDate:
          type: string
          format: date-time
        input_file_formats:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FileFormat'
        output_file_formats:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FileFormat'
    SourceControlBean:
      type: object
      properties:
        value:
          type: string
        friendlyName:
          type: string
    DescriptorLanguageBean:
      type: object
      properties:
        value:
          type: string
        friendlyName:
          type: string
    RegistryBean:
      type: object
      properties:
        dockerPath:
          type: string
        friendlyName:
          type: string
        url:
          type: string
        privateOnly:
          type: string
        customDockerPath:
          type: string
        enum:
          type: string
    Config:
      type: object
      properties:
        dnaStackImportUrl:
          type: string
        dnaNexusImportUrl:
          type: string
        terraImportUrl:
          type: string
        gitHubAuthUrl:
          type: string
        gitHubRedirectPath:
          type: string
        gitHubScope:
          type: string
        quayIoAuthUrl:
          type: string
        quayIoRedirectPath:
          type: string
        quayIoScope:
          type: string
        bitBucketAuthUrl:
          type: string
        gitlabAuthUrl:
          type: string
        gitlabRedirectPath:
          type: string
        gitlabScope:
          type: string
        zenodoAuthUrl:
          type: string
        zenodoRedirectPath:
          type: string
        zenodoScope:
          type: string
        googleScope:
          type: string
        cwlVisualizerUri:
          type: string
        tagManagerId:
          type: string
        gitHubAppInstallationUrl:
          type: string
        documentationUrl:
          type: string
        githubClientId:
          type: string
        quayIoClientId:
          type: string
        bitBucketClientId:
          type: string
        gitlabClientId:
          type: string
        zenodoClientId:
          type: string
        googleClientId:
          type: string
        discourseUrl:
          type: string
    ToolTesterLog:
      type: object
      properties:
        toolId:
          type: string
        toolVersionName:
          type: string
        testFilename:
          type: string
        runner:
          type: string
        logType:
          type: string
          enum:
          - FULL
          - SUMMARY
        filename:
          type: string
    Repository:
      type: object
      properties:
        organization:
          type: string
        repositoryName:
          type: string
        gitRegistry:
          type: string
          enum:
          - dockstore.org
          - github.com
          - bitbucket.org
          - gitlab.com
        canDelete:
          type: boolean
        present:
          type: boolean
        path:
          type: string
    OrganizationUpdateTime:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        lastUpdateDate:
          type: string
          format: date-time
    EntryUpdateTime:
      type: object
      properties:
        path:
          type: string
        entryType:
          type: string
          enum:
          - TOOL
          - WORKFLOW
          - SERVICE
        lastUpdateDate:
          type: string
          format: date-time
    BioWorkflow:
      type: object
      properties:
        descriptorType:
          type: string
          enum:
          - CWL
          - WDL
          - NFL
          - service
          
          
        id:
          type: integer
          format: int64
        author:
          type: string
        description:
          type: string
        labels:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Label'
        users:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/User'
        starredUsers:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/User'
        email:
          type: string
        defaultVersion:
          type: string
        lastUpdated:
          type: string
          format: date-time
        gitUrl:
          type: string
        aliases:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Alias'
        dbCreateDate:
          type: string
          format: date-time
        dbUpdateDate:
          type: string
          format: date-time
        topicId:
          type: integer
          format: int64
        conceptDoi:
          type: string
        mode:
          type: string
          enum:
          - FULL
          - STUB
          - HOSTED
          - SERVICE
        workflowName:
          type: string
        organization:
          type: string
        repository:
          type: string
        sourceControl:
          type: string
          enum:
          - dockstore.org
          - github.com
          - bitbucket.org
          - gitlab.com
        workflowVersions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/WorkflowVersion'
        path:
          type: string
        metadata:
          $ref: '#/components/schemas/Version'
        is_published:
          type: boolean
        last_modified:
          type: integer
          format: int32
        is_checker:
          type: boolean
        parent_id:
          type: integer
          format: int64
        source_control_provider:
          type: string
        full_workflow_path:
          type: string
        workflow_path:
          type: string
        defaultTestParameterFilePath:
          type: string
        has_checker:
          type: boolean
        input_file_formats:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FileFormat'
        output_file_formats:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FileFormat'
        checker_id:
          type: integer
          format: int64
        last_modified_date:
          type: string
          format: date-time
    WorkflowVersion:
      type: object
      properties:
        id:
          type: integer
          format: int64
        reference:
          type: string
        name:
          type: string
        commitID:
          type: string
        frozen:
          type: boolean
        referenceType:
          type: string
          enum:
          - COMMIT
          - TAG
          - BRANCH
          - NOT_APPLICABLE
          - UNSET
        sourceFiles:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/SourceFile'
        valid:
          type: boolean
        dirtyBit:
          type: boolean
        versionEditor:
          $ref: '#/components/schemas/User'
        validations:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Validation'
        images:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Image'
        subClass:
          type: string
          enum:
          - DOCKER_COMPOSE
          - SWARM
          - KUBERNETES
          - HELM
        workingDirectory:
          type: string
        hidden:
          type: boolean
        verified:
          type: boolean
        verifiedSource:
          type: string
        verifiedSources:
          type: array
          items:
            type: string
        doiURL:
          type: string
        doiStatus:
          type: string
          enum:
          - NOT_REQUESTED
          - REQUESTED
          - CREATED
        author:
          type: string
        description:
          type: string
        email:
          type: string
        dbUpdateDate:
          type: string
          format: date-time
        input_file_formats:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FileFormat'
        output_file_formats:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FileFormat'
        workflow_path:
          type: string
        last_modified:
          type: string
          format: date-time
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
      bearerFormat: JWT
