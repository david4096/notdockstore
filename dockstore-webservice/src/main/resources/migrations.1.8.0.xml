<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<!--
  ~    Copyright 2020 OICR
  ~
  ~    Licensed under the Apache License, Version 2.0 (the "License");
  ~    you may not use this file except in compliance with the License.
  ~    You may obtain a copy of the License at
  ~
  ~        http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~    Unless required by applicable law or agreed to in writing, software
  ~    distributed under the License is distributed on an "AS IS" BASIS,
  ~    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~    See the License for the specific language governing permissions and
  ~    limitations under the License.
  -->

<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd"
                   context="1.8.0">
    <changeSet author="waltershands (generated)" id="supportconceptDOI">
        <addColumn tableName="service">
            <column name="conceptdoi" type="varchar(255)"/>
        </addColumn>
        <addColumn tableName="tool">
            <column name="conceptdoi" type="varchar(255)"/>
        </addColumn>
        <addColumn tableName="workflow">
            <column name="conceptdoi" type="varchar(255)"/>
        </addColumn>
    </changeSet>
    <changeSet id="frozen join table" author="coverbeck">
        <sql dbms="postgresql">
            alter table version_sourcefile enable row level security;
            alter table version_sourcefile force row level security;
            /* All users can read the table, but cannot update or delete if frozen */
            create policy select_frozenfiles on version_sourcefile for select using(true);
            /* Don't allow new source files to be added to an a frozen version */
            create policy insert_frozenfiles on version_sourcefile for insert with check( not(select v.frozen from workflowversion v where id = versionid union select t.frozen from tag t where t.id = versionid));
            /* Don't allow a new file to be added to the version in the join table if any of the source files are already frozen (easier to query this way instead of querying two tables like above) */
            create policy update_frozenfiles on version_sourcefile for update using (not (select sf.frozen from sourcefile sf where sourcefileid = sf.id));
            create policy delete_frozenfiles on version_sourcefile for delete using (not (select sf.frozen from sourcefile sf where sourcefileid = sf.id));
        </sql>
    </changeSet>
   </databaseChangeLog>
