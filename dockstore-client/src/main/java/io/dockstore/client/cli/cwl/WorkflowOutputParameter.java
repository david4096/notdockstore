package io.dockstore.client.cli.cwl;

/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
@SuppressWarnings("all")
/** Describe an output parameter of a workflow.  The parameter must be
connected to one or more parameters defined in the workflow that will
provide the value of the output parameter.
 */
@org.apache.avro.specific.AvroGenerated
public class WorkflowOutputParameter extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"WorkflowOutputParameter\",\"doc\":\"Describe an output parameter of a workflow.  The parameter must be\\nconnected to one or more parameters defined in the workflow that will\\nprovide the value of the output parameter.\\n\",\"fields\":[{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"enum\",\"name\":\"CWLType\",\"symbols\":[\"File\"],\"extends\":\"https://w3id.org/cwl/salad#PrimitiveType\",\"symbol\":[\"https://w3id.org/cwl/salad#null\",\"http://www.w3.org/2001/XMLSchema#boolean\",\"http://www.w3.org/2001/XMLSchema#int\",\"http://www.w3.org/2001/XMLSchema#long\",\"http://www.w3.org/2001/XMLSchema#float\",\"http://www.w3.org/2001/XMLSchema#double\",\"http://www.w3.org/2001/XMLSchema#string\",\"https://w3id.org/cwl/cwl#File\"]},{\"type\":\"record\",\"name\":\"OutputRecordSchema\",\"fields\":[{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"Record_symbol\",\"symbols\":[\"record\"]},\"doc\":\"Must be `record`\",\"jsonldPredicate\":{\"_type\":\"@vocab\",\"_id\":\"https://w3id.org/cwl/salad#type\"},\"inherited_from\":\"https://w3id.org/cwl/salad#RecordSchema\"},{\"name\":\"fields\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"OutputRecordField\",\"fields\":[{\"name\":\"type\",\"type\":\"Record_symbol\",\"doc\":\"Must be `record`\",\"jsonldPredicate\":{\"_type\":\"@vocab\",\"_id\":\"https://w3id.org/cwl/salad#type\"},\"inherited_from\":\"https://w3id.org/cwl/salad#RecordSchema\"},{\"name\":\"fields\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"RecordField\",\"doc\":\"A field of a record.\",\"fields\":[{\"name\":\"name\",\"type\":\"string\",\"doc\":\"The name of the field\\n\",\"jsonldPredicate\":\"@id\"},{\"name\":\"doc\",\"type\":[\"null\",\"string\"],\"doc\":\"A documentation string for this field\\n\",\"jsonldPredicate\":\"sld:doc\"},{\"name\":\"type\",\"type\":[{\"type\":\"enum\",\"name\":\"PrimitiveType\",\"doc\":\"Salad data types are based on Avro schema declarations.  Refer to the\\n[Avro schema declaration documentation](https://avro.apache.org/docs/current/spec.html#schemas) for\\ndetailed information.\\n\\n## Simple types\\n\\n* **null**: no value\\n* **boolean**: a binary value\\n* **int**: 32-bit signed integer\\n* **long**: 64-bit signed integer\\n* **float**: single precision (32-bit) IEEE 754 floating-point number\\n* **double**: double precision (64-bit) IEEE 754 floating-point number\\n* **string**: Unicode character sequence\\n\",\"symbols\":[\"null\",\"boolean\",\"int\",\"long\",\"float\",\"double\",\"string\"]},{\"type\":\"record\",\"name\":\"RecordSchema\",\"fields\":[{\"name\":\"type\",\"type\":\"Record_symbol\",\"doc\":\"Must be `record`\",\"jsonldPredicate\":{\"_type\":\"@vocab\",\"_id\":\"https://w3id.org/cwl/salad#type\"}},{\"name\":\"fields\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"RecordField\"}],\"doc\":\"Defines the fields of the record.\",\"jsonldPredicate\":\"sld:fields\"}]},{\"type\":\"record\",\"name\":\"EnumSchema\",\"doc\":\"Define an enumerated type.\\n\",\"fields\":[{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"Enum_symbol\",\"symbols\":[\"enum\"]},\"doc\":\"Must be `enum`\",\"jsonldPredicate\":{\"_type\":\"@vocab\",\"_id\":\"https://w3id.org/cwl/salad#type\"}},{\"name\":\"symbols\",\"type\":[{\"type\":\"array\",\"items\":\"string\"}],\"doc\":\"Defines the set of valid symbols.\",\"jsonldPredicate\":{\"_type\":\"@id\",\"_id\":\"https://w3id.org/cwl/salad#symbols\",\"identity\":true}}]},{\"type\":\"record\",\"name\":\"ArraySchema\",\"fields\":[{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"Array_symbol\",\"symbols\":[\"array\"]},\"doc\":\"Must be `array`\",\"jsonldPredicate\":{\"_type\":\"@vocab\",\"_id\":\"https://w3id.org/cwl/salad#type\"}},{\"name\":\"items\",\"type\":[\"PrimitiveType\",\"RecordSchema\",\"EnumSchema\",\"ArraySchema\",\"string\",{\"type\":\"array\",\"items\":[\"PrimitiveType\",\"RecordSchema\",\"EnumSchema\",\"ArraySchema\",\"string\"]}],\"doc\":\"Defines the type of the array elements.\",\"jsonldPredicate\":{\"_type\":\"@vocab\",\"_id\":\"https://w3id.org/cwl/salad#items\"}}]},\"string\",{\"type\":\"array\",\"items\":[\"PrimitiveType\",\"RecordSchema\",\"EnumSchema\",\"ArraySchema\",\"string\"]}],\"doc\":\"The field type\\n\",\"jsonldPredicate\":{\"_type\":\"@vocab\",\"_id\":\"https://w3id.org/cwl/salad#type\"}}]}}],\"doc\":\"Defines the fields of the record.\",\"jsonldPredicate\":\"sld:fields\",\"inherited_from\":\"https://w3id.org/cwl/salad#RecordSchema\"},{\"name\":\"outputBinding\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Binding\",\"fields\":[{\"name\":\"loadContents\",\"type\":[\"null\",\"boolean\"],\"doc\":\"Only applies when `type` is `File`.  Read up to the first 64 KiB of text from the file and place it in the\\n\\\"contents\\\" field of the file object for manipulation by expressions.\\n\"},{\"name\":\"secondaryFiles\",\"type\":[\"null\",\"string\",{\"type\":\"enum\",\"name\":\"Expression\",\"doc\":\"Not a real type.  Indicates that a field must allow expressions.\\n\",\"symbols\":[\"ExpressionPlaceholder\"],\"docAfter\":\"https://w3id.org/cwl/cwl#ExpressionTool\"},{\"type\":\"array\",\"items\":[\"string\",\"Expression\"]}],\"doc\":\"Only applies when `type` is `File`.  Describes files that must be\\nincluded alongside the primary file.\\n\\nIf the value is an expression, the context of the expression is the input\\nor output File parameter to which this binding applies.\\n\\nIf the value is a string, it specifies that the following pattern\\nshould be applied to the primary file:\\n\\n  1. If string begins with one or more caret `^` characters, for each\\n    caret, remove the last file extension from the path (the last\\n    period `.` and all following characters).  If there are no file\\n    extensions, the path is unchanged.\\n  2. Append the remainder of the string to the end of the file path.\\n\",\"jsonldPredicate\":\"cwl:secondaryFiles\"}],\"docParent\":\"https://w3id.org/cwl/cwl#Parameter\"}],\"jsonldPredicate\":\"cwl:outputBinding\"}],\"docParent\":\"https://w3id.org/cwl/cwl#OutputParameter\",\"extends\":\"https://w3id.org/cwl/salad#RecordSchema\",\"specialize\":[{\"specializeFrom\":\"https://w3id.org/cwl/salad#RecordSchema\",\"specializeTo\":\"https://w3id.org/cwl/cwl#OutputRecordSchema\"},{\"specializeFrom\":\"https://w3id.org/cwl/salad#EnumSchema\",\"specializeTo\":\"https://w3id.org/cwl/cwl#OutputEnumSchema\"},{\"specializeFrom\":\"https://w3id.org/cwl/salad#ArraySchema\",\"specializeTo\":\"https://w3id.org/cwl/cwl#OutputArraySchema\"}]}}],\"doc\":\"Defines the fields of the record.\",\"jsonldPredicate\":\"sld:fields\",\"inherited_from\":\"https://w3id.org/cwl/salad#RecordSchema\"}],\"docParent\":\"https://w3id.org/cwl/cwl#OutputParameter\",\"extends\":\"https://w3id.org/cwl/salad#RecordSchema\",\"specialize\":[{\"specializeFrom\":\"https://w3id.org/cwl/salad#RecordField\",\"specializeTo\":\"https://w3id.org/cwl/cwl#OutputRecordField\"}]},{\"type\":\"record\",\"name\":\"OutputEnumSchema\",\"fields\":[{\"name\":\"type\",\"type\":\"Enum_symbol\",\"doc\":\"Must be `enum`\",\"jsonldPredicate\":{\"_type\":\"@vocab\",\"_id\":\"https://w3id.org/cwl/salad#type\"},\"inherited_from\":\"https://w3id.org/cwl/salad#EnumSchema\"},{\"name\":\"symbols\",\"type\":[{\"type\":\"array\",\"items\":\"string\"}],\"doc\":\"Defines the set of valid symbols.\",\"jsonldPredicate\":{\"_type\":\"@id\",\"_id\":\"https://w3id.org/cwl/salad#symbols\",\"identity\":true},\"inherited_from\":\"https://w3id.org/cwl/salad#EnumSchema\"},{\"name\":\"outputBinding\",\"type\":[\"null\",\"Binding\"],\"jsonldPredicate\":\"cwl:outputBinding\"}],\"extends\":\"https://w3id.org/cwl/salad#EnumSchema\",\"docParent\":\"https://w3id.org/cwl/cwl#OutputParameter\"},{\"type\":\"record\",\"name\":\"OutputArraySchema\",\"fields\":[{\"name\":\"type\",\"type\":\"Array_symbol\",\"doc\":\"Must be `array`\",\"jsonldPredicate\":{\"_type\":\"@vocab\",\"_id\":\"https://w3id.org/cwl/salad#type\"},\"inherited_from\":\"https://w3id.org/cwl/salad#ArraySchema\"},{\"name\":\"items\",\"type\":[\"PrimitiveType\",\"OutputRecordSchema\",\"OutputEnumSchema\",\"OutputArraySchema\",\"string\",{\"type\":\"array\",\"items\":[\"PrimitiveType\",\"OutputRecordSchema\",\"OutputEnumSchema\",\"OutputArraySchema\",\"string\"]}],\"doc\":\"Defines the type of the array elements.\",\"jsonldPredicate\":{\"_type\":\"@vocab\",\"_id\":\"https://w3id.org/cwl/salad#items\"},\"inherited_from\":\"https://w3id.org/cwl/salad#ArraySchema\"},{\"name\":\"outputBinding\",\"type\":[\"null\",\"Binding\"],\"jsonldPredicate\":\"cwl:outputBinding\"}],\"docParent\":\"https://w3id.org/cwl/cwl#OutputParameter\",\"extends\":\"https://w3id.org/cwl/salad#ArraySchema\",\"specialize\":[{\"specializeFrom\":\"https://w3id.org/cwl/salad#RecordSchema\",\"specializeTo\":\"https://w3id.org/cwl/cwl#OutputRecordSchema\"},{\"specializeFrom\":\"https://w3id.org/cwl/salad#EnumSchema\",\"specializeTo\":\"https://w3id.org/cwl/cwl#OutputEnumSchema\"},{\"specializeFrom\":\"https://w3id.org/cwl/salad#ArraySchema\",\"specializeTo\":\"https://w3id.","org/cwl/cwl#OutputArraySchema\"}]},\"string\",{\"type\":\"array\",\"items\":[\"CWLType\",\"OutputRecordSchema\",\"OutputEnumSchema\",\"OutputArraySchema\",\"string\"]}],\"doc\":\"Specify valid types of data that may be assigned to this parameter.\\n\",\"jsonldPredicate\":{\"_type\":\"@vocab\",\"_id\":\"https://w3id.org/cwl/salad#type\"},\"inherited_from\":\"https://w3id.org/cwl/cwl#Parameter\"},{\"name\":\"label\",\"type\":[\"null\",\"string\"],\"doc\":\"A short, human-readable label of this parameter object.\",\"jsonldPredicate\":\"rdfs:label\",\"inherited_from\":\"https://w3id.org/cwl/cwl#Parameter\"},{\"name\":\"description\",\"type\":[\"null\",\"string\"],\"doc\":\"A long, human-readable description of this parameter object.\",\"jsonldPredicate\":\"rdfs:comment\",\"inherited_from\":\"https://w3id.org/cwl/cwl#Parameter\"},{\"name\":\"streamable\",\"type\":[\"null\",\"boolean\"],\"doc\":\"Currently only applies if `type` is `File`.  A value of `true`\\nindicates that the file is read or written sequentially without\\nseeking.  An implementation may use this flag to indicate whether it is\\nvalid to stream file contents using a named pipe.  Default: `false`.\\n\",\"inherited_from\":\"https://w3id.org/cwl/cwl#Parameter\"},{\"name\":\"default\",\"type\":[\"null\",{\"type\":\"enum\",\"name\":\"Any\",\"doc\":\"The **Any** type validates for any non-null value.\\n\",\"symbols\":[\"Any\"]}],\"doc\":\"The default value for this parameter if not provided in the input\\nobject.\\n\",\"jsonldPredicate\":\"cwl:default\",\"inherited_from\":\"https://w3id.org/cwl/cwl#Parameter\"},{\"name\":\"id\",\"type\":\"string\",\"doc\":\"The unique identifier for this parameter object.\",\"jsonldPredicate\":\"@id\",\"inherited_from\":\"https://w3id.org/cwl/cwl#OutputParameter\"},{\"name\":\"outputBinding\",\"type\":[\"null\",\"Binding\"],\"doc\":\"Describes how to handle the outputs of a process.\\n\",\"jsonldPredicate\":\"cwl:outputBinding\",\"inherited_from\":\"https://w3id.org/cwl/cwl#OutputParameter\"},{\"name\":\"source\",\"type\":[\"null\",\"string\",{\"type\":\"array\",\"items\":\"string\"}],\"doc\":\"Specifies one or more workflow parameters that will provide input to\\nthe underlying process parameter.\\n\",\"jsonldPredicate\":{\"_type\":\"@id\",\"_id\":\"https://w3id.org/cwl/cwl#source\"},\"inherited_from\":\"https://w3id.org/cwl/cwl#Sink\"},{\"name\":\"linkMerge\",\"type\":[\"null\",{\"type\":\"enum\",\"name\":\"LinkMergeMethod\",\"doc\":\"The input link merge method, described in [WorkflowStepInput](#workflowstepinput).\",\"symbols\":[\"merge_nested\",\"merge_flattened\"],\"docParent\":\"https://w3id.org/cwl/cwl#WorkflowStepInput\"}],\"doc\":\"The method to use to merge multiple inbound links into a single array.\\nIf not specified, the default method is \\\"merge_nested\\\".\\n\",\"inherited_from\":\"https://w3id.org/cwl/cwl#Sink\"}],\"docParent\":\"https://w3id.org/cwl/cwl#Workflow\",\"extends\":[\"https://w3id.org/cwl/cwl#OutputParameter\",\"https://w3id.org/cwl/cwl#Sink\"]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Specify valid types of data that may be assigned to this parameter.
 */
  @Deprecated public java.lang.Object type;
  /** A short, human-readable label of this parameter object. */
  @Deprecated public java.lang.CharSequence label;
  /** A long, human-readable description of this parameter object. */
  @Deprecated public java.lang.CharSequence description;
  /** Currently only applies if `type` is `File`.  A value of `true`
indicates that the file is read or written sequentially without
seeking.  An implementation may use this flag to indicate whether it is
valid to stream file contents using a named pipe.  Default: `false`.
 */
  @Deprecated public java.lang.Boolean streamable;
  /** The default value for this parameter if not provided in the input
object.
 */
  @Deprecated public Any default$;
  /** The unique identifier for this parameter object. */
  @Deprecated public java.lang.CharSequence id;
  /** Describes how to handle the outputs of a process.
 */
  @Deprecated public Binding outputBinding;
  /** Specifies one or more workflow parameters that will provide input to
the underlying process parameter.
 */
  @Deprecated public java.lang.Object source;
  /** The method to use to merge multiple inbound links into a single array.
If not specified, the default method is "merge_nested".
 */
  @Deprecated public LinkMergeMethod linkMerge;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public WorkflowOutputParameter() {}

  /**
   * All-args constructor.
   */
  public WorkflowOutputParameter(java.lang.Object type, java.lang.CharSequence label, java.lang.CharSequence description, java.lang.Boolean streamable, Any default$, java.lang.CharSequence id, Binding outputBinding, java.lang.Object source, LinkMergeMethod linkMerge) {
    this.type = type;
    this.label = label;
    this.description = description;
    this.streamable = streamable;
    this.default$ = default$;
    this.id = id;
    this.outputBinding = outputBinding;
    this.source = source;
    this.linkMerge = linkMerge;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return type;
    case 1: return label;
    case 2: return description;
    case 3: return streamable;
    case 4: return default$;
    case 5: return id;
    case 6: return outputBinding;
    case 7: return source;
    case 8: return linkMerge;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: type = (java.lang.Object)value$; break;
    case 1: label = (java.lang.CharSequence)value$; break;
    case 2: description = (java.lang.CharSequence)value$; break;
    case 3: streamable = (java.lang.Boolean)value$; break;
    case 4: default$ = (Any)value$; break;
    case 5: id = (java.lang.CharSequence)value$; break;
    case 6: outputBinding = (Binding)value$; break;
    case 7: source = (java.lang.Object)value$; break;
    case 8: linkMerge = (LinkMergeMethod)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'type' field.
   * Specify valid types of data that may be assigned to this parameter.
   */
  public java.lang.Object getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   * Specify valid types of data that may be assigned to this parameter.
   * @param value the value to set.
   */
  public void setType(java.lang.Object value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'label' field.
   * A short, human-readable label of this parameter object.   */
  public java.lang.CharSequence getLabel() {
    return label;
  }

  /**
   * Sets the value of the 'label' field.
   * A short, human-readable label of this parameter object.   * @param value the value to set.
   */
  public void setLabel(java.lang.CharSequence value) {
    this.label = value;
  }

  /**
   * Gets the value of the 'description' field.
   * A long, human-readable description of this parameter object.   */
  public java.lang.CharSequence getDescription() {
    return description;
  }

  /**
   * Sets the value of the 'description' field.
   * A long, human-readable description of this parameter object.   * @param value the value to set.
   */
  public void setDescription(java.lang.CharSequence value) {
    this.description = value;
  }

  /**
   * Gets the value of the 'streamable' field.
   * Currently only applies if `type` is `File`.  A value of `true`
indicates that the file is read or written sequentially without
seeking.  An implementation may use this flag to indicate whether it is
valid to stream file contents using a named pipe.  Default: `false`.
   */
  public java.lang.Boolean getStreamable() {
    return streamable;
  }

  /**
   * Sets the value of the 'streamable' field.
   * Currently only applies if `type` is `File`.  A value of `true`
indicates that the file is read or written sequentially without
seeking.  An implementation may use this flag to indicate whether it is
valid to stream file contents using a named pipe.  Default: `false`.
   * @param value the value to set.
   */
  public void setStreamable(java.lang.Boolean value) {
    this.streamable = value;
  }

  /**
   * Gets the value of the 'default$' field.
   * The default value for this parameter if not provided in the input
object.
   */
  public Any getDefault$() {
    return default$;
  }

  /**
   * Sets the value of the 'default$' field.
   * The default value for this parameter if not provided in the input
object.
   * @param value the value to set.
   */
  public void setDefault$(Any value) {
    this.default$ = value;
  }

  /**
   * Gets the value of the 'id' field.
   * The unique identifier for this parameter object.   */
  public java.lang.CharSequence getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * The unique identifier for this parameter object.   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'outputBinding' field.
   * Describes how to handle the outputs of a process.
   */
  public Binding getOutputBinding() {
    return outputBinding;
  }

  /**
   * Sets the value of the 'outputBinding' field.
   * Describes how to handle the outputs of a process.
   * @param value the value to set.
   */
  public void setOutputBinding(Binding value) {
    this.outputBinding = value;
  }

  /**
   * Gets the value of the 'source' field.
   * Specifies one or more workflow parameters that will provide input to
the underlying process parameter.
   */
  public java.lang.Object getSource() {
    return source;
  }

  /**
   * Sets the value of the 'source' field.
   * Specifies one or more workflow parameters that will provide input to
the underlying process parameter.
   * @param value the value to set.
   */
  public void setSource(java.lang.Object value) {
    this.source = value;
  }

  /**
   * Gets the value of the 'linkMerge' field.
   * The method to use to merge multiple inbound links into a single array.
If not specified, the default method is "merge_nested".
   */
  public LinkMergeMethod getLinkMerge() {
    return linkMerge;
  }

  /**
   * Sets the value of the 'linkMerge' field.
   * The method to use to merge multiple inbound links into a single array.
If not specified, the default method is "merge_nested".
   * @param value the value to set.
   */
  public void setLinkMerge(LinkMergeMethod value) {
    this.linkMerge = value;
  }

  /** Creates a new WorkflowOutputParameter RecordBuilder */
  public static WorkflowOutputParameter.Builder newBuilder() {
    return new WorkflowOutputParameter.Builder();
  }
  
  /** Creates a new WorkflowOutputParameter RecordBuilder by copying an existing Builder */
  public static WorkflowOutputParameter.Builder newBuilder(WorkflowOutputParameter.Builder other) {
    return new WorkflowOutputParameter.Builder(other);
  }
  
  /** Creates a new WorkflowOutputParameter RecordBuilder by copying an existing WorkflowOutputParameter instance */
  public static WorkflowOutputParameter.Builder newBuilder(WorkflowOutputParameter other) {
    return new WorkflowOutputParameter.Builder(other);
  }
  
  /**
   * RecordBuilder for WorkflowOutputParameter instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<WorkflowOutputParameter>
    implements org.apache.avro.data.RecordBuilder<WorkflowOutputParameter> {

    private java.lang.Object type;
    private java.lang.CharSequence label;
    private java.lang.CharSequence description;
    private java.lang.Boolean streamable;
    private Any default$;
    private java.lang.CharSequence id;
    private Binding outputBinding;
    private java.lang.Object source;
    private LinkMergeMethod linkMerge;

    /** Creates a new Builder */
    private Builder() {
      super(WorkflowOutputParameter.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(WorkflowOutputParameter.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.type)) {
        this.type = data().deepCopy(fields()[0].schema(), other.type);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.label)) {
        this.label = data().deepCopy(fields()[1].schema(), other.label);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.description)) {
        this.description = data().deepCopy(fields()[2].schema(), other.description);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.streamable)) {
        this.streamable = data().deepCopy(fields()[3].schema(), other.streamable);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.default$)) {
        this.default$ = data().deepCopy(fields()[4].schema(), other.default$);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.id)) {
        this.id = data().deepCopy(fields()[5].schema(), other.id);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.outputBinding)) {
        this.outputBinding = data().deepCopy(fields()[6].schema(), other.outputBinding);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.source)) {
        this.source = data().deepCopy(fields()[7].schema(), other.source);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.linkMerge)) {
        this.linkMerge = data().deepCopy(fields()[8].schema(), other.linkMerge);
        fieldSetFlags()[8] = true;
      }
    }
    
    /** Creates a Builder by copying an existing WorkflowOutputParameter instance */
    private Builder(WorkflowOutputParameter other) {
            super(WorkflowOutputParameter.SCHEMA$);
      if (isValidValue(fields()[0], other.type)) {
        this.type = data().deepCopy(fields()[0].schema(), other.type);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.label)) {
        this.label = data().deepCopy(fields()[1].schema(), other.label);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.description)) {
        this.description = data().deepCopy(fields()[2].schema(), other.description);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.streamable)) {
        this.streamable = data().deepCopy(fields()[3].schema(), other.streamable);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.default$)) {
        this.default$ = data().deepCopy(fields()[4].schema(), other.default$);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.id)) {
        this.id = data().deepCopy(fields()[5].schema(), other.id);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.outputBinding)) {
        this.outputBinding = data().deepCopy(fields()[6].schema(), other.outputBinding);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.source)) {
        this.source = data().deepCopy(fields()[7].schema(), other.source);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.linkMerge)) {
        this.linkMerge = data().deepCopy(fields()[8].schema(), other.linkMerge);
        fieldSetFlags()[8] = true;
      }
    }

    /** Gets the value of the 'type' field */
    public java.lang.Object getType() {
      return type;
    }
    
    /** Sets the value of the 'type' field */
    public WorkflowOutputParameter.Builder setType(java.lang.Object value) {
      validate(fields()[0], value);
      this.type = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'type' field has been set */
    public boolean hasType() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'type' field */
    public WorkflowOutputParameter.Builder clearType() {
      type = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'label' field */
    public java.lang.CharSequence getLabel() {
      return label;
    }
    
    /** Sets the value of the 'label' field */
    public WorkflowOutputParameter.Builder setLabel(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.label = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'label' field has been set */
    public boolean hasLabel() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'label' field */
    public WorkflowOutputParameter.Builder clearLabel() {
      label = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'description' field */
    public java.lang.CharSequence getDescription() {
      return description;
    }
    
    /** Sets the value of the 'description' field */
    public WorkflowOutputParameter.Builder setDescription(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.description = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'description' field has been set */
    public boolean hasDescription() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'description' field */
    public WorkflowOutputParameter.Builder clearDescription() {
      description = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'streamable' field */
    public java.lang.Boolean getStreamable() {
      return streamable;
    }
    
    /** Sets the value of the 'streamable' field */
    public WorkflowOutputParameter.Builder setStreamable(java.lang.Boolean value) {
      validate(fields()[3], value);
      this.streamable = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'streamable' field has been set */
    public boolean hasStreamable() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'streamable' field */
    public WorkflowOutputParameter.Builder clearStreamable() {
      streamable = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'default$' field */
    public Any getDefault$() {
      return default$;
    }
    
    /** Sets the value of the 'default$' field */
    public WorkflowOutputParameter.Builder setDefault$(Any value) {
      validate(fields()[4], value);
      this.default$ = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'default$' field has been set */
    public boolean hasDefault$() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'default$' field */
    public WorkflowOutputParameter.Builder clearDefault$() {
      default$ = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'id' field */
    public java.lang.CharSequence getId() {
      return id;
    }
    
    /** Sets the value of the 'id' field */
    public WorkflowOutputParameter.Builder setId(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.id = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'id' field has been set */
    public boolean hasId() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'id' field */
    public WorkflowOutputParameter.Builder clearId() {
      id = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'outputBinding' field */
    public Binding getOutputBinding() {
      return outputBinding;
    }
    
    /** Sets the value of the 'outputBinding' field */
    public WorkflowOutputParameter.Builder setOutputBinding(Binding value) {
      validate(fields()[6], value);
      this.outputBinding = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'outputBinding' field has been set */
    public boolean hasOutputBinding() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'outputBinding' field */
    public WorkflowOutputParameter.Builder clearOutputBinding() {
      outputBinding = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'source' field */
    public java.lang.Object getSource() {
      return source;
    }
    
    /** Sets the value of the 'source' field */
    public WorkflowOutputParameter.Builder setSource(java.lang.Object value) {
      validate(fields()[7], value);
      this.source = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'source' field has been set */
    public boolean hasSource() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'source' field */
    public WorkflowOutputParameter.Builder clearSource() {
      source = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'linkMerge' field */
    public LinkMergeMethod getLinkMerge() {
      return linkMerge;
    }
    
    /** Sets the value of the 'linkMerge' field */
    public WorkflowOutputParameter.Builder setLinkMerge(LinkMergeMethod value) {
      validate(fields()[8], value);
      this.linkMerge = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'linkMerge' field has been set */
    public boolean hasLinkMerge() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'linkMerge' field */
    public WorkflowOutputParameter.Builder clearLinkMerge() {
      linkMerge = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    public WorkflowOutputParameter build() {
      try {
        WorkflowOutputParameter record = new WorkflowOutputParameter();
        record.type = fieldSetFlags()[0] ? this.type : (java.lang.Object) defaultValue(fields()[0]);
        record.label = fieldSetFlags()[1] ? this.label : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.description = fieldSetFlags()[2] ? this.description : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.streamable = fieldSetFlags()[3] ? this.streamable : (java.lang.Boolean) defaultValue(fields()[3]);
        record.default$ = fieldSetFlags()[4] ? this.default$ : (Any) defaultValue(fields()[4]);
        record.id = fieldSetFlags()[5] ? this.id : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.outputBinding = fieldSetFlags()[6] ? this.outputBinding : (Binding) defaultValue(fields()[6]);
        record.source = fieldSetFlags()[7] ? this.source : (java.lang.Object) defaultValue(fields()[7]);
        record.linkMerge = fieldSetFlags()[8] ? this.linkMerge : (LinkMergeMethod) defaultValue(fields()[8]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
