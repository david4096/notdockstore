package io.dockstore.client.cli.cwl;

/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
@SuppressWarnings("all")
/** Execute an expression as a process step.
 */
@org.apache.avro.specific.AvroGenerated
public class ExpressionTool extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ExpressionTool\",\"doc\":\"Execute an expression as a process step.\\n\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"string\"],\"doc\":\"The unique identifier for this process object.\",\"jsonldPredicate\":\"@id\",\"inherited_from\":\"https://w3id.org/cwl/cwl#Process\"},{\"name\":\"inputs\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"InputParameter\",\"fields\":[{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"enum\",\"name\":\"CWLType\",\"symbols\":[\"File\"],\"extends\":\"https://w3id.org/cwl/salad#PrimitiveType\",\"symbol\":[\"https://w3id.org/cwl/salad#null\",\"http://www.w3.org/2001/XMLSchema#boolean\",\"http://www.w3.org/2001/XMLSchema#int\",\"http://www.w3.org/2001/XMLSchema#long\",\"http://www.w3.org/2001/XMLSchema#float\",\"http://www.w3.org/2001/XMLSchema#double\",\"http://www.w3.org/2001/XMLSchema#string\",\"https://w3id.org/cwl/cwl#File\"]},{\"type\":\"record\",\"name\":\"InputRecordSchema\",\"fields\":[{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"Record_symbol\",\"symbols\":[\"record\"]},\"doc\":\"Must be `record`\",\"jsonldPredicate\":{\"_type\":\"@vocab\",\"_id\":\"https://w3id.org/cwl/salad#type\"},\"inherited_from\":\"https://w3id.org/cwl/salad#RecordSchema\"},{\"name\":\"fields\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"InputRecordField\",\"fields\":[{\"name\":\"name\",\"type\":\"string\",\"doc\":\"The name of the field\\n\",\"jsonldPredicate\":\"@id\",\"inherited_from\":\"https://w3id.org/cwl/salad#RecordField\"},{\"name\":\"doc\",\"type\":[\"null\",\"string\"],\"doc\":\"A documentation string for this field\\n\",\"jsonldPredicate\":\"sld:doc\",\"inherited_from\":\"https://w3id.org/cwl/salad#RecordField\"},{\"name\":\"type\",\"type\":[{\"type\":\"enum\",\"name\":\"PrimitiveType\",\"doc\":\"Salad data types are based on Avro schema declarations.  Refer to the\\n[Avro schema declaration documentation](https://avro.apache.org/docs/current/spec.html#schemas) for\\ndetailed information.\\n\\n## Simple types\\n\\n* **null**: no value\\n* **boolean**: a binary value\\n* **int**: 32-bit signed integer\\n* **long**: 64-bit signed integer\\n* **float**: single precision (32-bit) IEEE 754 floating-point number\\n* **double**: double precision (64-bit) IEEE 754 floating-point number\\n* **string**: Unicode character sequence\\n\",\"symbols\":[\"null\",\"boolean\",\"int\",\"long\",\"float\",\"double\",\"string\"]},\"InputRecordSchema\",{\"type\":\"record\",\"name\":\"InputEnumSchema\",\"fields\":[{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"Enum_symbol\",\"symbols\":[\"enum\"]},\"doc\":\"Must be `enum`\",\"jsonldPredicate\":{\"_type\":\"@vocab\",\"_id\":\"https://w3id.org/cwl/salad#type\"},\"inherited_from\":\"https://w3id.org/cwl/salad#EnumSchema\"},{\"name\":\"symbols\",\"type\":[{\"type\":\"array\",\"items\":\"string\"}],\"doc\":\"Defines the set of valid symbols.\",\"jsonldPredicate\":{\"_type\":\"@id\",\"_id\":\"https://w3id.org/cwl/salad#symbols\",\"identity\":true},\"inherited_from\":\"https://w3id.org/cwl/salad#EnumSchema\"},{\"name\":\"inputBinding\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Binding\",\"fields\":[{\"name\":\"loadContents\",\"type\":[\"null\",\"boolean\"],\"doc\":\"Only applies when `type` is `File`.  Read up to the first 64 KiB of text from the file and place it in the\\n\\\"contents\\\" field of the file object for manipulation by expressions.\\n\"},{\"name\":\"secondaryFiles\",\"type\":[\"null\",\"string\",{\"type\":\"enum\",\"name\":\"Expression\",\"doc\":\"Not a real type.  Indicates that a field must allow expressions.\\n\",\"symbols\":[\"ExpressionPlaceholder\"],\"docAfter\":\"https://w3id.org/cwl/cwl#ExpressionTool\"},{\"type\":\"array\",\"items\":[\"string\",\"Expression\"]}],\"doc\":\"Only applies when `type` is `File`.  Describes files that must be\\nincluded alongside the primary file.\\n\\nIf the value is an expression, the context of the expression is the input\\nor output File parameter to which this binding applies.\\n\\nIf the value is a string, it specifies that the following pattern\\nshould be applied to the primary file:\\n\\n  1. If string begins with one or more caret `^` characters, for each\\n    caret, remove the last file extension from the path (the last\\n    period `.` and all following characters).  If there are no file\\n    extensions, the path is unchanged.\\n  2. Append the remainder of the string to the end of the file path.\\n\",\"jsonldPredicate\":\"cwl:secondaryFiles\"}],\"docParent\":\"https://w3id.org/cwl/cwl#Parameter\"}],\"jsonldPredicate\":\"cwl:inputBinding\"}],\"docParent\":\"https://w3id.org/cwl/cwl#InputParameter\",\"extends\":\"https://w3id.org/cwl/salad#EnumSchema\"},{\"type\":\"record\",\"name\":\"InputArraySchema\",\"fields\":[{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"Array_symbol\",\"symbols\":[\"array\"]},\"doc\":\"Must be `array`\",\"jsonldPredicate\":{\"_type\":\"@vocab\",\"_id\":\"https://w3id.org/cwl/salad#type\"},\"inherited_from\":\"https://w3id.org/cwl/salad#ArraySchema\"},{\"name\":\"items\",\"type\":[\"PrimitiveType\",\"InputRecordSchema\",\"InputEnumSchema\",\"InputArraySchema\",\"string\",{\"type\":\"array\",\"items\":[\"PrimitiveType\",\"InputRecordSchema\",\"InputEnumSchema\",\"InputArraySchema\",\"string\"]}],\"doc\":\"Defines the type of the array elements.\",\"jsonldPredicate\":{\"_type\":\"@vocab\",\"_id\":\"https://w3id.org/cwl/salad#items\"},\"inherited_from\":\"https://w3id.org/cwl/salad#ArraySchema\"},{\"name\":\"inputBinding\",\"type\":[\"null\",\"Binding\"],\"jsonldPredicate\":\"cwl:inputBinding\"}],\"docParent\":\"https://w3id.org/cwl/cwl#InputParameter\",\"extends\":\"https://w3id.org/cwl/salad#ArraySchema\",\"specialize\":[{\"specializeFrom\":\"https://w3id.org/cwl/salad#RecordSchema\",\"specializeTo\":\"https://w3id.org/cwl/cwl#InputRecordSchema\"},{\"specializeFrom\":\"https://w3id.org/cwl/salad#EnumSchema\",\"specializeTo\":\"https://w3id.org/cwl/cwl#InputEnumSchema\"},{\"specializeFrom\":\"https://w3id.org/cwl/salad#ArraySchema\",\"specializeTo\":\"https://w3id.org/cwl/cwl#InputArraySchema\"}]},\"string\",{\"type\":\"array\",\"items\":[\"PrimitiveType\",\"InputRecordSchema\",\"InputEnumSchema\",\"InputArraySchema\",\"string\"]}],\"doc\":\"The field type\\n\",\"jsonldPredicate\":{\"_type\":\"@vocab\",\"_id\":\"https://w3id.org/cwl/salad#type\"},\"inherited_from\":\"https://w3id.org/cwl/salad#RecordField\"},{\"name\":\"inputBinding\",\"type\":[\"null\",\"Binding\"],\"jsonldPredicate\":\"cwl:inputBinding\"}],\"extends\":\"https://w3id.org/cwl/salad#RecordField\",\"specialize\":[{\"specializeFrom\":\"https://w3id.org/cwl/salad#RecordSchema\",\"specializeTo\":\"https://w3id.org/cwl/cwl#InputRecordSchema\"},{\"specializeFrom\":\"https://w3id.org/cwl/salad#EnumSchema\",\"specializeTo\":\"https://w3id.org/cwl/cwl#InputEnumSchema\"},{\"specializeFrom\":\"https://w3id.org/cwl/salad#ArraySchema\",\"specializeTo\":\"https://w3id.org/cwl/cwl#InputArraySchema\"}]}}],\"doc\":\"Defines the fields of the record.\",\"jsonldPredicate\":\"sld:fields\",\"inherited_from\":\"https://w3id.org/cwl/salad#RecordSchema\"}],\"docParent\":\"https://w3id.org/cwl/cwl#InputParameter\",\"extends\":\"https://w3id.org/cwl/salad#RecordSchema\",\"specialize\":[{\"specializeFrom\":\"https://w3id.org/cwl/salad#RecordField\",\"specializeTo\":\"https://w3id.org/cwl/cwl#InputRecordField\"}]},\"InputEnumSchema\",\"InputArraySchema\",\"string\",{\"type\":\"array\",\"items\":[\"CWLType\",\"InputRecordSchema\",\"InputEnumSchema\",\"InputArraySchema\",\"string\"]}],\"doc\":\"Specify valid types of data that may be assigned to this parameter.\\n\",\"jsonldPredicate\":{\"_type\":\"@vocab\",\"_id\":\"https://w3id.org/cwl/salad#type\"},\"inherited_from\":\"https://w3id.org/cwl/cwl#Parameter\"},{\"name\":\"label\",\"type\":[\"null\",\"string\"],\"doc\":\"A short, human-readable label of this parameter object.\",\"jsonldPredicate\":\"rdfs:label\",\"inherited_from\":\"https://w3id.org/cwl/cwl#Parameter\"},{\"name\":\"description\",\"type\":[\"null\",\"string\"],\"doc\":\"A long, human-readable description of this parameter object.\",\"jsonldPredicate\":\"rdfs:comment\",\"inherited_from\":\"https://w3id.org/cwl/cwl#Parameter\"},{\"name\":\"streamable\",\"type\":[\"null\",\"boolean\"],\"doc\":\"Currently only applies if `type` is `File`.  A value of `true`\\nindicates that the file is read or written sequentially without\\nseeking.  An implementation may use this flag to indicate whether it is\\nvalid to stream file contents using a named pipe.  Default: `false`.\\n\",\"inherited_from\":\"https://w3id.org/cwl/cwl#Parameter\"},{\"name\":\"default\",\"type\":[\"null\",{\"type\":\"enum\",\"name\":\"Any\",\"doc\":\"The **Any** type validates for any non-null value.\\n\",\"symbols\":[\"Any\"]}],\"doc\":\"The default value for this parameter if not provided in the input\\nobject.\\n\",\"jsonldPredicate\":\"cwl:default\",\"inherited_from\":\"https://w3id.org/cwl/cwl#Parameter\"","},{\"name\":\"id\",\"type\":\"string\",\"doc\":\"The unique identifier for this parameter object.\",\"jsonldPredicate\":\"@id\"},{\"name\":\"inputBinding\",\"type\":[\"null\",\"Binding\"],\"doc\":\"Describes how to handle the inputs of a process and convert them\\ninto a concrete form for execution, such as command line parameters.\\n\",\"jsonldPredicate\":\"cwl:inputBinding\"}],\"docAfter\":\"https://w3id.org/cwl/cwl#Parameter\",\"extends\":\"https://w3id.org/cwl/cwl#Parameter\",\"specialize\":[{\"specializeFrom\":\"https://w3id.org/cwl/salad#RecordSchema\",\"specializeTo\":\"https://w3id.org/cwl/cwl#InputRecordSchema\"},{\"specializeFrom\":\"https://w3id.org/cwl/salad#EnumSchema\",\"specializeTo\":\"https://w3id.org/cwl/cwl#InputEnumSchema\"},{\"specializeFrom\":\"https://w3id.org/cwl/salad#ArraySchema\",\"specializeTo\":\"https://w3id.org/cwl/cwl#InputArraySchema\"}]}},\"doc\":\"Defines the input parameters of the process.  The process is ready to\\nrun when all required input parameters are associated with concrete\\nvalues.  Input parameters include a schema for each parameter which is\\nused to validate the input object.  It may also be used to build a user\\ninterface for constructing the input object.\\n\",\"jsonldPredicate\":\"cwl:inputs\",\"inherited_from\":\"https://w3id.org/cwl/cwl#Process\"},{\"name\":\"outputs\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"OutputParameter\",\"fields\":[{\"name\":\"type\",\"type\":[\"null\",\"CWLType\",{\"type\":\"record\",\"name\":\"OutputRecordSchema\",\"fields\":[{\"name\":\"type\",\"type\":\"Record_symbol\",\"doc\":\"Must be `record`\",\"jsonldPredicate\":{\"_type\":\"@vocab\",\"_id\":\"https://w3id.org/cwl/salad#type\"},\"inherited_from\":\"https://w3id.org/cwl/salad#RecordSchema\"},{\"name\":\"fields\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"OutputRecordField\",\"fields\":[{\"name\":\"type\",\"type\":\"Record_symbol\",\"doc\":\"Must be `record`\",\"jsonldPredicate\":{\"_type\":\"@vocab\",\"_id\":\"https://w3id.org/cwl/salad#type\"},\"inherited_from\":\"https://w3id.org/cwl/salad#RecordSchema\"},{\"name\":\"fields\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"RecordField\",\"doc\":\"A field of a record.\",\"fields\":[{\"name\":\"name\",\"type\":\"string\",\"doc\":\"The name of the field\\n\",\"jsonldPredicate\":\"@id\"},{\"name\":\"doc\",\"type\":[\"null\",\"string\"],\"doc\":\"A documentation string for this field\\n\",\"jsonldPredicate\":\"sld:doc\"},{\"name\":\"type\",\"type\":[\"PrimitiveType\",{\"type\":\"record\",\"name\":\"RecordSchema\",\"fields\":[{\"name\":\"type\",\"type\":\"Record_symbol\",\"doc\":\"Must be `record`\",\"jsonldPredicate\":{\"_type\":\"@vocab\",\"_id\":\"https://w3id.org/cwl/salad#type\"}},{\"name\":\"fields\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"RecordField\"}],\"doc\":\"Defines the fields of the record.\",\"jsonldPredicate\":\"sld:fields\"}]},{\"type\":\"record\",\"name\":\"EnumSchema\",\"doc\":\"Define an enumerated type.\\n\",\"fields\":[{\"name\":\"type\",\"type\":\"Enum_symbol\",\"doc\":\"Must be `enum`\",\"jsonldPredicate\":{\"_type\":\"@vocab\",\"_id\":\"https://w3id.org/cwl/salad#type\"}},{\"name\":\"symbols\",\"type\":[{\"type\":\"array\",\"items\":\"string\"}],\"doc\":\"Defines the set of valid symbols.\",\"jsonldPredicate\":{\"_type\":\"@id\",\"_id\":\"https://w3id.org/cwl/salad#symbols\",\"identity\":true}}]},{\"type\":\"record\",\"name\":\"ArraySchema\",\"fields\":[{\"name\":\"type\",\"type\":\"Array_symbol\",\"doc\":\"Must be `array`\",\"jsonldPredicate\":{\"_type\":\"@vocab\",\"_id\":\"https://w3id.org/cwl/salad#type\"}},{\"name\":\"items\",\"type\":[\"PrimitiveType\",\"RecordSchema\",\"EnumSchema\",\"ArraySchema\",\"string\",{\"type\":\"array\",\"items\":[\"PrimitiveType\",\"RecordSchema\",\"EnumSchema\",\"ArraySchema\",\"string\"]}],\"doc\":\"Defines the type of the array elements.\",\"jsonldPredicate\":{\"_type\":\"@vocab\",\"_id\":\"https://w3id.org/cwl/salad#items\"}}]},\"string\",{\"type\":\"array\",\"items\":[\"PrimitiveType\",\"RecordSchema\",\"EnumSchema\",\"ArraySchema\",\"string\"]}],\"doc\":\"The field type\\n\",\"jsonldPredicate\":{\"_type\":\"@vocab\",\"_id\":\"https://w3id.org/cwl/salad#type\"}}]}}],\"doc\":\"Defines the fields of the record.\",\"jsonldPredicate\":\"sld:fields\",\"inherited_from\":\"https://w3id.org/cwl/salad#RecordSchema\"},{\"name\":\"outputBinding\",\"type\":[\"null\",\"Binding\"],\"jsonldPredicate\":\"cwl:outputBinding\"}],\"docParent\":\"https://w3id.org/cwl/cwl#OutputParameter\",\"extends\":\"https://w3id.org/cwl/salad#RecordSchema\",\"specialize\":[{\"specializeFrom\":\"https://w3id.org/cwl/salad#RecordSchema\",\"specializeTo\":\"https://w3id.org/cwl/cwl#OutputRecordSchema\"},{\"specializeFrom\":\"https://w3id.org/cwl/salad#EnumSchema\",\"specializeTo\":\"https://w3id.org/cwl/cwl#OutputEnumSchema\"},{\"specializeFrom\":\"https://w3id.org/cwl/salad#ArraySchema\",\"specializeTo\":\"https://w3id.org/cwl/cwl#OutputArraySchema\"}]}}],\"doc\":\"Defines the fields of the record.\",\"jsonldPredicate\":\"sld:fields\",\"inherited_from\":\"https://w3id.org/cwl/salad#RecordSchema\"}],\"docParent\":\"https://w3id.org/cwl/cwl#OutputParameter\",\"extends\":\"https://w3id.org/cwl/salad#RecordSchema\",\"specialize\":[{\"specializeFrom\":\"https://w3id.org/cwl/salad#RecordField\",\"specializeTo\":\"https://w3id.org/cwl/cwl#OutputRecordField\"}]},{\"type\":\"record\",\"name\":\"OutputEnumSchema\",\"fields\":[{\"name\":\"type\",\"type\":\"Enum_symbol\",\"doc\":\"Must be `enum`\",\"jsonldPredicate\":{\"_type\":\"@vocab\",\"_id\":\"https://w3id.org/cwl/salad#type\"},\"inherited_from\":\"https://w3id.org/cwl/salad#EnumSchema\"},{\"name\":\"symbols\",\"type\":[{\"type\":\"array\",\"items\":\"string\"}],\"doc\":\"Defines the set of valid symbols.\",\"jsonldPredicate\":{\"_type\":\"@id\",\"_id\":\"https://w3id.org/cwl/salad#symbols\",\"identity\":true},\"inherited_from\":\"https://w3id.org/cwl/salad#EnumSchema\"},{\"name\":\"outputBinding\",\"type\":[\"null\",\"Binding\"],\"jsonldPredicate\":\"cwl:outputBinding\"}],\"extends\":\"https://w3id.org/cwl/salad#EnumSchema\",\"docParent\":\"https://w3id.org/cwl/cwl#OutputParameter\"},{\"type\":\"record\",\"name\":\"OutputArraySchema\",\"fields\":[{\"name\":\"type\",\"type\":\"Array_symbol\",\"doc\":\"Must be `array`\",\"jsonldPredicate\":{\"_type\":\"@vocab\",\"_id\":\"https://w3id.org/cwl/salad#type\"},\"inherited_from\":\"https://w3id.org/cwl/salad#ArraySchema\"},{\"name\":\"items\",\"type\":[\"PrimitiveType\",\"OutputRecordSchema\",\"OutputEnumSchema\",\"OutputArraySchema\",\"string\",{\"type\":\"array\",\"items\":[\"PrimitiveType\",\"OutputRecordSchema\",\"OutputEnumSchema\",\"OutputArraySchema\",\"string\"]}],\"doc\":\"Defines the type of the array elements.\",\"jsonldPredicate\":{\"_type\":\"@vocab\",\"_id\":\"https://w3id.org/cwl/salad#items\"},\"inherited_from\":\"https://w3id.org/cwl/salad#ArraySchema\"},{\"name\":\"outputBinding\",\"type\":[\"null\",\"Binding\"],\"jsonldPredicate\":\"cwl:outputBinding\"}],\"docParent\":\"https://w3id.org/cwl/cwl#OutputParameter\",\"extends\":\"https://w3id.org/cwl/salad#ArraySchema\",\"specialize\":[{\"specializeFrom\":\"https://w3id.org/cwl/salad#RecordSchema\",\"specializeTo\":\"https://w3id.org/cwl/cwl#OutputRecordSchema\"},{\"specializeFrom\":\"https://w3id.org/cwl/salad#EnumSchema\",\"specializeTo\":\"https://w3id.org/cwl/cwl#OutputEnumSchema\"},{\"specializeFrom\":\"https://w3id.org/cwl/salad#ArraySchema\",\"specializeTo\":\"https://w3id.org/cwl/cwl#OutputArraySchema\"}]},\"string\",{\"type\":\"array\",\"items\":[\"CWLType\",\"OutputRecordSchema\",\"OutputEnumSchema\",\"OutputArraySchema\",\"string\"]}],\"doc\":\"Specify valid types of data that may be assigned to this parameter.\\n\",\"jsonldPredicate\":{\"_type\":\"@vocab\",\"_id\":\"https://w3id.org/cwl/salad#type\"},\"inherited_from\":\"https://w3id.org/cwl/cwl#Parameter\"},{\"name\":\"label\",\"type\":[\"null\",\"string\"],\"doc\":\"A short, human-readable label of this parameter object.\",\"jsonldPredicate\":\"rdfs:label\",\"inherited_from\":\"https://w3id.org/cwl/cwl#Parameter\"},{\"name\":\"description\",\"type\":[\"null\",\"string\"],\"doc\":\"A long, human-readable description of this parameter object.\",\"jsonldPredicate\":\"rdfs:comment\",\"inherited_from\":\"https://w3id.org/cwl/cwl#Parameter\"},{\"name\":\"streamable\",\"type\":[\"null\",\"boolean\"],\"doc\":\"Currently only applies if `type` is `File`.  A value of `true`\\nindicates that the file is read or written sequentially without\\nseeking.  An implementation may use this flag to indicate whether it is\\nvalid to stream file contents using a named pipe.  Default: `false`.\\n\",\"inherited_from\":\"https://w3id.org/cwl/cwl#Parameter\"},{\"name\":\"default\",\"type\":[\"null\",\"Any\"],\"doc\":\"The default value for this parameter if not provided in the input\\nobject.\\n\",\"jsonldPredicate\":\"cwl:default\",\"inherited_from\":\"https://w3id.org/cwl/cwl#Parameter\"},{\"name\":\"id\",\"type\":\"string\",\"doc\":\"The unique identifier for this param","eter object.\",\"jsonldPredicate\":\"@id\"},{\"name\":\"outputBinding\",\"type\":[\"null\",\"Binding\"],\"doc\":\"Describes how to handle the outputs of a process.\\n\",\"jsonldPredicate\":\"cwl:outputBinding\"}],\"docAfter\":\"https://w3id.org/cwl/cwl#Parameter\",\"extends\":\"https://w3id.org/cwl/cwl#Parameter\",\"specialize\":[{\"specializeFrom\":\"https://w3id.org/cwl/salad#RecordSchema\",\"specializeTo\":\"https://w3id.org/cwl/cwl#OutputRecordSchema\"},{\"specializeFrom\":\"https://w3id.org/cwl/salad#EnumSchema\",\"specializeTo\":\"https://w3id.org/cwl/cwl#OutputEnumSchema\"},{\"specializeFrom\":\"https://w3id.org/cwl/salad#ArraySchema\",\"specializeTo\":\"https://w3id.org/cwl/cwl#OutputArraySchema\"}]}},\"doc\":\"Defines the parameters representing the output of the process.  May be\\nused to generate and/or validate the output object.\\n\",\"jsonldPredicate\":\"cwl:outputs\",\"inherited_from\":\"https://w3id.org/cwl/cwl#Process\"},{\"name\":\"requirements\",\"type\":[\"null\",{\"type\":\"array\",\"items\":[{\"type\":\"record\",\"name\":\"DockerRequirement\",\"doc\":\"Indicates that a workflow component should be run in a\\n[Docker](http://docker.com) container, and specifies how to fetch or build\\nthe image.\\n\\nIf a CommandLineTool lists `DockerRequirement` under\\n`hints` or `requirements`, it may (or must) be run in the specified Docker\\ncontainer.\\n\\nThe platform must first acquire or install the correct Docker image as\\nspecified by `dockerPull`, `dockerImport`, `dockerLoad` or `dockerFile`.\\n\\nThe platform must execute the tool in the container using `docker run` with\\nthe appropriate Docker image and tool command line.\\n\\nThe workflow platform may provide input files and the designated output\\ndirectory through the use of volume bind mounts.  The platform may rewrite\\nfile paths in the input object to correspond to the Docker bind mounted\\nlocations.\\n\\nWhen running a tool contained in Docker, the workflow platform must not\\nassume anything about the contents of the Docker container, such as the\\npresence or absence of specific software, except to assume that the\\ngenerated command line represents a valid command within the runtime\\nenvironment of the container.\\n\\n## Interaction with other requirements\\n\\nIf [EnvVarRequirement](#envvarrequirement) is specified alongside a\\nDockerRequirement, the environment variables must be provided to Docker\\nusing `--env` or `--env-file` and interact with the container's preexisting\\nenvironment as defined by Docker.\\n\",\"fields\":[{\"name\":\"class\",\"type\":\"string\",\"doc\":\"The specific requirement type.\",\"jsonldPredicate\":{\"_type\":\"@vocab\",\"_id\":\"@type\"},\"inherited_from\":\"https://w3id.org/cwl/cwl#ProcessRequirement\"},{\"name\":\"dockerPull\",\"type\":[\"null\",\"string\"],\"doc\":\"Specify a Docker image to retrieve using `docker pull`.\"},{\"name\":\"dockerLoad\",\"type\":[\"null\",\"string\"],\"doc\":\"Specify a HTTP URL from which to download a Docker image using `docker load`.\"},{\"name\":\"dockerFile\",\"type\":[\"null\",\"string\"],\"doc\":\"Supply the contents of a Dockerfile which will be built using `docker build`.\"},{\"name\":\"dockerImport\",\"type\":[\"null\",\"string\"],\"doc\":\"Provide HTTP URL to download and gunzip a Docker images using `docker import.\"},{\"name\":\"dockerImageId\",\"type\":[\"null\",\"string\"],\"doc\":\"The image id that will be used for `docker run`.  May be a\\nhuman-readable image name or the image identifier hash.  May be skipped\\nif `dockerPull` is specified, in which case the `dockerPull` image id\\nmust be used.\\n\"},{\"name\":\"dockerOutputDirectory\",\"type\":[\"null\",\"string\"],\"doc\":\"Set the designated output directory to a specific location inside the\\nDocker container.\\n\"}],\"extends\":\"https://w3id.org/cwl/cwl#ProcessRequirement\"},{\"type\":\"record\",\"name\":\"SubworkflowFeatureRequirement\",\"doc\":\"Indicates that the workflow platform must support nested workflows in\\nthe `run` field of (WorkflowStep)(#workflowstep).\\n\",\"fields\":[{\"name\":\"class\",\"type\":\"string\",\"doc\":\"The specific requirement type.\",\"jsonldPredicate\":{\"_type\":\"@vocab\",\"_id\":\"@type\"},\"inherited_from\":\"https://w3id.org/cwl/cwl#ProcessRequirement\"}],\"extends\":\"https://w3id.org/cwl/cwl#ProcessRequirement\"},{\"type\":\"record\",\"name\":\"CreateFileRequirement\",\"doc\":\"Define a list of files that must be created by the workflow\\nplatform in the designated output directory prior to executing the command\\nline tool.  See `FileDef` for details.\\n\",\"fields\":[{\"name\":\"class\",\"type\":\"string\",\"doc\":\"The specific requirement type.\",\"jsonldPredicate\":{\"_type\":\"@vocab\",\"_id\":\"@type\"},\"inherited_from\":\"https://w3id.org/cwl/cwl#ProcessRequirement\"},{\"name\":\"fileDef\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"FileDef\",\"doc\":\"Define a file that must be placed in the designated output directory\\nprior to executing the command line tool.  May be the result of executing\\nan expression, such as building a configuration file from a template.\\n\",\"fields\":[{\"name\":\"filename\",\"type\":[\"string\",\"Expression\"],\"doc\":\"The name of the file to create in the output directory.\"},{\"name\":\"fileContent\",\"type\":[\"string\",\"Expression\"],\"doc\":\"If the value is a string literal or an expression which evaluates to a\\nstring, a new file must be created with the string as the file contents.\\n\\nIf the value is an expression that evaluates to a File object, this\\nindicates the referenced file should be added to the designated output\\ndirectory prior to executing the tool.\\n\\nFiles added in this way may be read-only, and may be provided\\nby bind mounts or file system links to avoid\\nunnecessary copying of the input file.\\n\"}],\"docParent\":\"https://w3id.org/cwl/cwl#CreateFileRequirement\"}},\"doc\":\"The list of files.\"}],\"extends\":\"https://w3id.org/cwl/cwl#ProcessRequirement\"},{\"type\":\"record\",\"name\":\"EnvVarRequirement\",\"doc\":\"Define a list of environment variables which will be set in the\\nexecution environment of the tool.  See `EnvironmentDef` for details.\\n\",\"fields\":[{\"name\":\"class\",\"type\":\"string\",\"doc\":\"The specific requirement type.\",\"jsonldPredicate\":{\"_type\":\"@vocab\",\"_id\":\"@type\"},\"inherited_from\":\"https://w3id.org/cwl/cwl#ProcessRequirement\"},{\"name\":\"envDef\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"EnvironmentDef\",\"doc\":\"Define an environment variable that will be set in the runtime environment\\nby the workflow platform when executing the command line tool.  May be the\\nresult of executing an expression, such as getting a parameter from input.\\n\",\"fields\":[{\"name\":\"envName\",\"type\":\"string\",\"doc\":\"The environment variable name\"},{\"name\":\"envValue\",\"type\":[\"string\",\"Expression\"],\"doc\":\"The environment variable value\"}],\"docParent\":\"https://w3id.org/cwl/cwl#EnvVarRequirement\"}},\"doc\":\"The list of environment variables.\"}],\"extends\":\"https://w3id.org/cwl/cwl#ProcessRequirement\"},{\"type\":\"record\",\"name\":\"ScatterFeatureRequirement\",\"doc\":\"Indicates that the workflow platform must support the `scatter` and\\n`scatterMethod` fields of [WorkflowStep](#workflowstep).\\n\",\"fields\":[{\"name\":\"class\",\"type\":\"string\",\"doc\":\"The specific requirement type.\",\"jsonldPredicate\":{\"_type\":\"@vocab\",\"_id\":\"@type\"},\"inherited_from\":\"https://w3id.org/cwl/cwl#ProcessRequirement\"}],\"extends\":\"https://w3id.org/cwl/cwl#ProcessRequirement\"},{\"type\":\"record\",\"name\":\"MultipleInputFeatureRequirement\",\"doc\":\"Indicates that the workflow platform must support multiple inbound data links\\nlisted in the `source` field of [WorkflowStepInput](#workflowstepinput).\\n\",\"fields\":[{\"name\":\"class\",\"type\":\"string\",\"doc\":\"The specific requirement type.\",\"jsonldPredicate\":{\"_type\":\"@vocab\",\"_id\":\"@type\"},\"inherited_from\":\"https://w3id.org/cwl/cwl#ProcessRequirement\"}],\"extends\":\"https://w3id.org/cwl/cwl#ProcessRequirement\"},{\"type\":\"record\",\"name\":\"InlineJavascriptRequirement\",\"doc\":\"Indicates that the workflow platform must support inline Javascript expressions.\\nIf this requirement is not present, the workflow platform must not perform expression\\ninterpolatation.\\n\",\"fields\":[{\"name\":\"class\",\"type\":\"string\",\"doc\":\"The specific requirement type.\",\"jsonldPredicate\":{\"_type\":\"@vocab\",\"_id\":\"@type\"},\"inherited_from\":\"https://w3id.org/cwl/cwl#ProcessRequirement\"},{\"name\":\"expressionLib\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"string\"}],\"doc\":\"Additional code fragments that will also be inserted\\nbefore executing the expression cod","e.  Allows for function definitions that may\\nbe called from CWL expressions.\\n\"}],\"extends\":\"https://w3id.org/cwl/cwl#ProcessRequirement\"},{\"type\":\"record\",\"name\":\"SchemaDefRequirement\",\"doc\":\"This field consists of an\\narray of type definitions which must be used when interpreting the `inputs` and\\n`outputs` fields.  When a symbolic type is encountered that is not in\\n[`Datatype`](#datatype), the implementation must check if\\nthe type is defined in `schemaDefs` and use that definition.  If the type is not\\nfound in `schemaDefs`, it is an error.  The entries in `schemaDefs` must be\\nprocessed in the order listed such that later schema definitions may refer to\\nearlier schema definitions.\\n\",\"fields\":[{\"name\":\"class\",\"type\":\"string\",\"doc\":\"The specific requirement type.\",\"jsonldPredicate\":{\"_type\":\"@vocab\",\"_id\":\"@type\"},\"inherited_from\":\"https://w3id.org/cwl/cwl#ProcessRequirement\"},{\"name\":\"types\",\"type\":{\"type\":\"array\",\"items\":[\"InputRecordSchema\",\"InputEnumSchema\",\"InputArraySchema\",{\"type\":\"record\",\"name\":\"CommandInputRecordSchema\",\"fields\":[{\"name\":\"type\",\"type\":\"Record_symbol\",\"doc\":\"Must be `record`\",\"jsonldPredicate\":{\"_type\":\"@vocab\",\"_id\":\"https://w3id.org/cwl/salad#type\"},\"inherited_from\":\"https://w3id.org/cwl/salad#RecordSchema\"},{\"name\":\"fields\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"CommandInputRecordField\",\"fields\":[{\"name\":\"name\",\"type\":\"string\",\"doc\":\"The name of the field\\n\",\"jsonldPredicate\":\"@id\",\"inherited_from\":\"https://w3id.org/cwl/salad#RecordField\"},{\"name\":\"doc\",\"type\":[\"null\",\"string\"],\"doc\":\"A documentation string for this field\\n\",\"jsonldPredicate\":\"sld:doc\",\"inherited_from\":\"https://w3id.org/cwl/salad#RecordField\"},{\"name\":\"type\",\"type\":[\"PrimitiveType\",\"CommandInputRecordSchema\",{\"type\":\"record\",\"name\":\"CommandInputEnumSchema\",\"fields\":[{\"name\":\"type\",\"type\":\"Enum_symbol\",\"doc\":\"Must be `enum`\",\"jsonldPredicate\":{\"_type\":\"@vocab\",\"_id\":\"https://w3id.org/cwl/salad#type\"},\"inherited_from\":\"https://w3id.org/cwl/salad#EnumSchema\"},{\"name\":\"symbols\",\"type\":[{\"type\":\"array\",\"items\":\"string\"}],\"doc\":\"Defines the set of valid symbols.\",\"jsonldPredicate\":{\"_type\":\"@id\",\"_id\":\"https://w3id.org/cwl/salad#symbols\",\"identity\":true},\"inherited_from\":\"https://w3id.org/cwl/salad#EnumSchema\"},{\"name\":\"inputBinding\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"CommandLineBinding\",\"doc\":\"\\nWhen listed under `inputBinding` in the input schema, the term\\n\\\"value\\\" refers to the the corresponding value in the input object.  For\\nbinding objects listed in `CommandLineTool.arguments`, the term \\\"value\\\"\\nrefers to the effective value after evaluating `valueFrom`.\\n\\nThe binding behavior when building the command line depends on the data\\ntype of the value.  If there is a mismatch between the type described by\\nthe input schema and the effective value, such as resulting from an\\nexpression evaluation, an implementation must use the data type of the\\neffective value.\\n\\n  - **string**: Add `prefix` and the string to the command line.\\n\\n  - **number**: Add `prefix` and decimal representation to command line.\\n\\n  - **boolean**: If true, add `prefix` to the command line.  If false, add\\n      nothing.\\n\\n  - **File**: Add `prefix` and the value of\\n    [`File.path`](#file) to the command line.\\n\\n  - **array**: If `itemSeparator` is specified, add `prefix` and the join\\n      the array into a single string with `itemSeparator` separating the\\n      items.  Otherwise first add `prefix`, then recursively process\\n      individual elements.\\n\\n  - **object**: Add `prefix` only, and recursively add object fields for\\n      which `inputBinding` is specified.\\n\\n  - **null**: Add nothing.\\n\",\"fields\":[{\"name\":\"loadContents\",\"type\":[\"null\",\"boolean\"],\"doc\":\"Only applies when `type` is `File`.  Read up to the first 64 KiB of text from the file and place it in the\\n\\\"contents\\\" field of the file object for manipulation by expressions.\\n\",\"inherited_from\":\"https://w3id.org/cwl/cwl#Binding\"},{\"name\":\"secondaryFiles\",\"type\":[\"null\",\"string\",\"Expression\",{\"type\":\"array\",\"items\":[\"string\",\"Expression\"]}],\"doc\":\"Only applies when `type` is `File`.  Describes files that must be\\nincluded alongside the primary file.\\n\\nIf the value is an expression, the context of the expression is the input\\nor output File parameter to which this binding applies.\\n\\nIf the value is a string, it specifies that the following pattern\\nshould be applied to the primary file:\\n\\n  1. If string begins with one or more caret `^` characters, for each\\n    caret, remove the last file extension from the path (the last\\n    period `.` and all following characters).  If there are no file\\n    extensions, the path is unchanged.\\n  2. Append the remainder of the string to the end of the file path.\\n\",\"jsonldPredicate\":\"cwl:secondaryFiles\",\"inherited_from\":\"https://w3id.org/cwl/cwl#Binding\"},{\"name\":\"position\",\"type\":[\"null\",\"int\"],\"doc\":\"The sorting key.  Default position is 0.\"},{\"name\":\"prefix\",\"type\":[\"null\",\"string\"],\"doc\":\"Command line prefix to add before the value.\"},{\"name\":\"separate\",\"type\":[\"null\",\"boolean\"],\"doc\":\"If true (default), then the prefix and value must be added as separate\\ncommand line arguments; if false, prefix and value must be concatenated\\ninto a single command line argument.\\n\"},{\"name\":\"itemSeparator\",\"type\":[\"null\",\"string\"],\"doc\":\"Join the array elements into a single string with the elements\\nseparated by by `itemSeparator`.\\n\"},{\"name\":\"valueFrom\",\"type\":[\"null\",\"string\",\"Expression\"],\"doc\":\"If `valueFrom` is a constant string value, use this as the value and\\napply the binding rules above.\\n\\nIf `valueFrom` is an expression, evaluate the expression to yield the\\nactual value to use to build the command line and apply the binding\\nrules above.  If the inputBinding is associated with an input\\nparameter, the \\\"context\\\" of the expression will be the value of the\\ninput parameter.\\n\\nWhen a binding is part of the `CommandLineTool.arguments` field,\\nthe `valueFrom` field is required.\\n\"},{\"name\":\"shellQuote\",\"type\":[\"null\",\"boolean\"],\"doc\":\"If `ShellCommandRequirement` is in the requirements for the current command,\\nthis controls whether the value is quoted on the command line (default is true).\\nUse `shellQuote: false` to inject metacharacters for operations such as pipes.\\n\"}],\"docParent\":\"https://w3id.org/cwl/cwl#CommandInputParameter\",\"extends\":\"https://w3id.org/cwl/cwl#Binding\"}],\"jsonldPredicate\":\"cwl:inputBinding\",\"inherited_from\":\"https://w3id.org/cwl/cwl#InputEnumSchema\"}],\"docParent\":\"https://w3id.org/cwl/cwl#InputParameter\",\"extends\":\"https://w3id.org/cwl/cwl#InputEnumSchema\",\"specialize\":[{\"specializeFrom\":\"https://w3id.org/cwl/cwl#Binding\",\"specializeTo\":\"https://w3id.org/cwl/cwl#CommandLineBinding\"}]},{\"type\":\"record\",\"name\":\"CommandInputArraySchema\",\"fields\":[{\"name\":\"type\",\"type\":\"Array_symbol\",\"doc\":\"Must be `array`\",\"jsonldPredicate\":{\"_type\":\"@vocab\",\"_id\":\"https://w3id.org/cwl/salad#type\"},\"inherited_from\":\"https://w3id.org/cwl/salad#ArraySchema\"},{\"name\":\"items\",\"type\":[\"PrimitiveType\",\"CommandInputRecordSchema\",\"CommandInputEnumSchema\",\"CommandInputArraySchema\",\"string\",{\"type\":\"array\",\"items\":[\"PrimitiveType\",\"CommandInputRecordSchema\",\"CommandInputEnumSchema\",\"CommandInputArraySchema\",\"string\"]}],\"doc\":\"Defines the type of the array elements.\",\"jsonldPredicate\":{\"_type\":\"@vocab\",\"_id\":\"https://w3id.org/cwl/salad#items\"},\"inherited_from\":\"https://w3id.org/cwl/salad#ArraySchema\"},{\"name\":\"inputBinding\",\"type\":[\"null\",\"CommandLineBinding\"],\"jsonldPredicate\":\"cwl:inputBinding\",\"inherited_from\":\"https://w3id.org/cwl/cwl#InputArraySchema\"}],\"docParent\":\"https://w3id.org/cwl/cwl#InputParameter\",\"extends\":\"https://w3id.org/cwl/cwl#InputArraySchema\",\"specialize\":[{\"specializeFrom\":\"https://w3id.org/cwl/cwl#InputRecordSchema\",\"specializeTo\":\"https://w3id.org/cwl/cwl#CommandInputRecordSchema\"},{\"specializeFrom\":\"https://w3id.org/cwl/cwl#InputEnumSchema\",\"specializeTo\":\"https://w3id.org/cwl/cwl#CommandInputEnumSchema\"},{\"specializeFrom\":\"https://w3id.org/cwl/cwl#InputArraySchema\",\"specializeTo\":\"https://w3id.org/cwl/cwl#CommandInputArraySchema\"},{\"specializeFrom\":\"https://w3id.org/cwl/cwl#Binding\",\"specializeTo\":\"ht","tps://w3id.org/cwl/cwl#CommandLineBinding\"}]},\"string\",{\"type\":\"array\",\"items\":[\"PrimitiveType\",\"CommandInputRecordSchema\",\"CommandInputEnumSchema\",\"CommandInputArraySchema\",\"string\"]}],\"doc\":\"The field type\\n\",\"jsonldPredicate\":{\"_type\":\"@vocab\",\"_id\":\"https://w3id.org/cwl/salad#type\"},\"inherited_from\":\"https://w3id.org/cwl/salad#RecordField\"},{\"name\":\"inputBinding\",\"type\":[\"null\",\"CommandLineBinding\"],\"jsonldPredicate\":\"cwl:inputBinding\",\"inherited_from\":\"https://w3id.org/cwl/cwl#InputRecordField\"}],\"docParent\":\"https://w3id.org/cwl/cwl#InputParameter\",\"extends\":\"https://w3id.org/cwl/cwl#InputRecordField\",\"specialize\":[{\"specializeFrom\":\"https://w3id.org/cwl/cwl#InputRecordSchema\",\"specializeTo\":\"https://w3id.org/cwl/cwl#CommandInputRecordSchema\"},{\"specializeFrom\":\"https://w3id.org/cwl/cwl#InputEnumSchema\",\"specializeTo\":\"https://w3id.org/cwl/cwl#CommandInputEnumSchema\"},{\"specializeFrom\":\"https://w3id.org/cwl/cwl#InputArraySchema\",\"specializeTo\":\"https://w3id.org/cwl/cwl#CommandInputArraySchema\"},{\"specializeFrom\":\"https://w3id.org/cwl/cwl#Binding\",\"specializeTo\":\"https://w3id.org/cwl/cwl#CommandLineBinding\"}]}}],\"doc\":\"Defines the fields of the record.\",\"jsonldPredicate\":\"sld:fields\",\"inherited_from\":\"https://w3id.org/cwl/salad#RecordSchema\"}],\"docParent\":\"https://w3id.org/cwl/cwl#InputParameter\",\"extends\":\"https://w3id.org/cwl/cwl#InputRecordSchema\",\"specialize\":[{\"specializeFrom\":\"https://w3id.org/cwl/cwl#InputRecordField\",\"specializeTo\":\"https://w3id.org/cwl/cwl#CommandInputRecordField\"}]},\"CommandInputEnumSchema\",\"CommandInputArraySchema\"]},\"doc\":\"The list of type definitions.\"}],\"extends\":\"https://w3id.org/cwl/cwl#ProcessRequirement\"},{\"type\":\"record\",\"name\":\"ShellCommandRequirement\",\"doc\":\"Modify the behavior of CommandLineTool to generate a single string\\ncontaining a shell command line.  Each item in the argument list must be\\njoined into a string separated by single spaces and quoted to prevent\\nintepretation by the shell, unless `CommandLineBinding` for that argument\\ncontains `shellQuote: false`.  If `shellQuote: false` is specified, the\\nargument is joined into the command string without quoting, which allows\\nthe use of shell metacharacters such as `|` for pipes.\\n\",\"fields\":[{\"name\":\"class\",\"type\":\"string\",\"doc\":\"The specific requirement type.\",\"jsonldPredicate\":{\"_type\":\"@vocab\",\"_id\":\"@type\"},\"inherited_from\":\"https://w3id.org/cwl/cwl#ProcessRequirement\"}],\"extends\":\"https://w3id.org/cwl/cwl#ProcessRequirement\"},{\"type\":\"record\",\"name\":\"ResourceRequirement\",\"doc\":\"Specify basic hardware resource requirements.\\n\\n\\\"min\\\" is the minimum amount of a resource that must be reserved to schedule\\na job. If \\\"min\\\" cannot be satisfied, the job should not be run.\\n\\n\\\"max\\\" is the maximum amount of a resource that the job shall be permitted\\nto use. If a node has sufficient resources, multiple jobs may be scheduled\\non a single node provided each job's \\\"max\\\" resource requirements are\\nmet. If a job attempts to exceed its \\\"max\\\" resource allocation, an\\nimplementation may deny additional resources, which may result in job\\nfailure.\\n\\nIf \\\"min\\\" is specified but \\\"max\\\" is not, then \\\"max\\\" == \\\"min\\\"\\nIf \\\"max\\\" is specified by \\\"min\\\" is not, then \\\"min\\\" == \\\"max\\\".\\n\\nIt is an error if max < min.\\n\\nIt is an error if the value of any of these fields is negative.\\n\\nIf neither \\\"min\\\" nor \\\"max\\\" is specified for a resource, an implementation may provide a default.\\n\",\"fields\":[{\"name\":\"class\",\"type\":\"string\",\"doc\":\"The specific requirement type.\",\"jsonldPredicate\":{\"_type\":\"@vocab\",\"_id\":\"@type\"},\"inherited_from\":\"https://w3id.org/cwl/cwl#ProcessRequirement\"},{\"name\":\"coresMin\",\"type\":[\"null\",\"long\",\"string\",\"Expression\"],\"doc\":\"Minimum reserved number of CPU cores\"},{\"name\":\"coresMax\",\"type\":[\"null\",\"int\",\"string\",\"Expression\"],\"doc\":\"Maximum reserved number of CPU cores\"},{\"name\":\"ramMin\",\"type\":[\"null\",\"long\",\"string\",\"Expression\"],\"doc\":\"Minimum reserved RAM in mebibytes (2**20)\"},{\"name\":\"ramMax\",\"type\":[\"null\",\"long\",\"string\",\"Expression\"],\"doc\":\"Maximum reserved RAM in mebibytes (2**20)\"},{\"name\":\"tmpdirMin\",\"type\":[\"null\",\"long\",\"string\",\"Expression\"],\"doc\":\"Minimum reserved filesystem based storage for the designated temporary directory, in mebibytes (2**20)\"},{\"name\":\"tmpdirMax\",\"type\":[\"null\",\"long\",\"string\",\"Expression\"],\"doc\":\"Maximum reserved filesystem based storage for the designated temporary directory, in mebibytes (2**20)\"},{\"name\":\"outdirMin\",\"type\":[\"null\",\"long\",\"string\",\"Expression\"],\"doc\":\"Minimum reserved filesystem based storage for the designated output directory, in mebibytes (2**20)\"},{\"name\":\"outdirMax\",\"type\":[\"null\",\"long\",\"string\",\"Expression\"],\"doc\":\"Maximum reserved filesystem based storage for the designated output directory, in mebibytes (2**20)\"}],\"extends\":\"https://w3id.org/cwl/cwl#ProcessRequirement\"}]}],\"doc\":\"Declares requirements that apply to either the runtime environment or the\\nworkflow engine that must be met in order to execute this process.  If\\nan implementation cannot satisfy all requirements, or a requirement is\\nlisted which is not recognized by the implementation, it is a fatal\\nerror and the implementation must not attempt to run the process,\\nunless overridden at user option.\\n\",\"jsonldPredicate\":\"cwl:requirements\",\"inherited_from\":\"https://w3id.org/cwl/cwl#Process\"},{\"name\":\"hints\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"Any\"}],\"doc\":\"Declares hints applying to either the runtime environment or the\\nworkflow engine that may be helpful in executing this process.  It is\\nnot an error if an implementation cannot satisfy all hints, however\\nthe implementation may report a warning.\\n\",\"jsonldPredicate\":{\"_id\":\"https://w3id.org/cwl/cwl#hints\",\"noLinkCheck\":true},\"inherited_from\":\"https://w3id.org/cwl/cwl#Process\"},{\"name\":\"label\",\"type\":[\"null\",\"string\"],\"doc\":\"A short, human-readable label of this process object.\",\"jsonldPredicate\":\"rdfs:label\",\"inherited_from\":\"https://w3id.org/cwl/cwl#Process\"},{\"name\":\"description\",\"type\":[\"null\",\"string\"],\"doc\":\"A long, human-readable description of this process object.\",\"jsonldPredicate\":\"rdfs:comment\",\"inherited_from\":\"https://w3id.org/cwl/cwl#Process\"},{\"name\":\"cwlVersion\",\"type\":[\"null\",\"string\"],\"doc\":\"CWL document version\",\"jsonldPredicate\":{\"_type\":\"@id\",\"_id\":\"https://w3id.org/cwl/cwl#cwlVersion\"},\"inherited_from\":\"https://w3id.org/cwl/cwl#Process\"},{\"name\":\"class\",\"type\":\"string\",\"jsonldPredicate\":{\"_type\":\"@vocab\",\"_id\":\"@type\"}},{\"name\":\"expression\",\"type\":[\"string\",\"Expression\"],\"doc\":\"The expression to execute.  The expression must return a JSON object which\\nmatches the output parameters of the ExpressionTool.\\n\"}],\"docAfter\":\"https://w3id.org/cwl/cwl#CommandLineTool\",\"documentRoot\":true,\"extends\":\"https://w3id.org/cwl/cwl#Process\"}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** The unique identifier for this process object. */
  @Deprecated public java.lang.CharSequence id;
  /** Defines the input parameters of the process.  The process is ready to
run when all required input parameters are associated with concrete
values.  Input parameters include a schema for each parameter which is
used to validate the input object.  It may also be used to build a user
interface for constructing the input object.
 */
  @Deprecated public java.util.List<InputParameter> inputs;
  /** Defines the parameters representing the output of the process.  May be
used to generate and/or validate the output object.
 */
  @Deprecated public java.util.List<OutputParameter> outputs;
  /** Declares requirements that apply to either the runtime environment or the
workflow engine that must be met in order to execute this process.  If
an implementation cannot satisfy all requirements, or a requirement is
listed which is not recognized by the implementation, it is a fatal
error and the implementation must not attempt to run the process,
unless overridden at user option.
 */
  @Deprecated public java.util.List<java.lang.Object> requirements;
  /** Declares hints applying to either the runtime environment or the
workflow engine that may be helpful in executing this process.  It is
not an error if an implementation cannot satisfy all hints, however
the implementation may report a warning.
 */
  @Deprecated public java.util.List<Any> hints;
  /** A short, human-readable label of this process object. */
  @Deprecated public java.lang.CharSequence label;
  /** A long, human-readable description of this process object. */
  @Deprecated public java.lang.CharSequence description;
  /** CWL document version */
  @Deprecated public java.lang.CharSequence cwlVersion;
  @Deprecated public java.lang.CharSequence class$;
  /** The expression to execute.  The expression must return a JSON object which
matches the output parameters of the ExpressionTool.
 */
  @Deprecated public java.lang.Object expression;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public ExpressionTool() {}

  /**
   * All-args constructor.
   */
  public ExpressionTool(java.lang.CharSequence id, java.util.List<InputParameter> inputs, java.util.List<OutputParameter> outputs, java.util.List<java.lang.Object> requirements, java.util.List<Any> hints, java.lang.CharSequence label, java.lang.CharSequence description, java.lang.CharSequence cwlVersion, java.lang.CharSequence class$, java.lang.Object expression) {
    this.id = id;
    this.inputs = inputs;
    this.outputs = outputs;
    this.requirements = requirements;
    this.hints = hints;
    this.label = label;
    this.description = description;
    this.cwlVersion = cwlVersion;
    this.class$ = class$;
    this.expression = expression;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return inputs;
    case 2: return outputs;
    case 3: return requirements;
    case 4: return hints;
    case 5: return label;
    case 6: return description;
    case 7: return cwlVersion;
    case 8: return class$;
    case 9: return expression;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.CharSequence)value$; break;
    case 1: inputs = (java.util.List<InputParameter>)value$; break;
    case 2: outputs = (java.util.List<OutputParameter>)value$; break;
    case 3: requirements = (java.util.List<java.lang.Object>)value$; break;
    case 4: hints = (java.util.List<Any>)value$; break;
    case 5: label = (java.lang.CharSequence)value$; break;
    case 6: description = (java.lang.CharSequence)value$; break;
    case 7: cwlVersion = (java.lang.CharSequence)value$; break;
    case 8: class$ = (java.lang.CharSequence)value$; break;
    case 9: expression = (java.lang.Object)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   * The unique identifier for this process object.   */
  public java.lang.CharSequence getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * The unique identifier for this process object.   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'inputs' field.
   * Defines the input parameters of the process.  The process is ready to
run when all required input parameters are associated with concrete
values.  Input parameters include a schema for each parameter which is
used to validate the input object.  It may also be used to build a user
interface for constructing the input object.
   */
  public java.util.List<InputParameter> getInputs() {
    return inputs;
  }

  /**
   * Sets the value of the 'inputs' field.
   * Defines the input parameters of the process.  The process is ready to
run when all required input parameters are associated with concrete
values.  Input parameters include a schema for each parameter which is
used to validate the input object.  It may also be used to build a user
interface for constructing the input object.
   * @param value the value to set.
   */
  public void setInputs(java.util.List<InputParameter> value) {
    this.inputs = value;
  }

  /**
   * Gets the value of the 'outputs' field.
   * Defines the parameters representing the output of the process.  May be
used to generate and/or validate the output object.
   */
  public java.util.List<OutputParameter> getOutputs() {
    return outputs;
  }

  /**
   * Sets the value of the 'outputs' field.
   * Defines the parameters representing the output of the process.  May be
used to generate and/or validate the output object.
   * @param value the value to set.
   */
  public void setOutputs(java.util.List<OutputParameter> value) {
    this.outputs = value;
  }

  /**
   * Gets the value of the 'requirements' field.
   * Declares requirements that apply to either the runtime environment or the
workflow engine that must be met in order to execute this process.  If
an implementation cannot satisfy all requirements, or a requirement is
listed which is not recognized by the implementation, it is a fatal
error and the implementation must not attempt to run the process,
unless overridden at user option.
   */
  public java.util.List<java.lang.Object> getRequirements() {
    return requirements;
  }

  /**
   * Sets the value of the 'requirements' field.
   * Declares requirements that apply to either the runtime environment or the
workflow engine that must be met in order to execute this process.  If
an implementation cannot satisfy all requirements, or a requirement is
listed which is not recognized by the implementation, it is a fatal
error and the implementation must not attempt to run the process,
unless overridden at user option.
   * @param value the value to set.
   */
  public void setRequirements(java.util.List<java.lang.Object> value) {
    this.requirements = value;
  }

  /**
   * Gets the value of the 'hints' field.
   * Declares hints applying to either the runtime environment or the
workflow engine that may be helpful in executing this process.  It is
not an error if an implementation cannot satisfy all hints, however
the implementation may report a warning.
   */
  public java.util.List<Any> getHints() {
    return hints;
  }

  /**
   * Sets the value of the 'hints' field.
   * Declares hints applying to either the runtime environment or the
workflow engine that may be helpful in executing this process.  It is
not an error if an implementation cannot satisfy all hints, however
the implementation may report a warning.
   * @param value the value to set.
   */
  public void setHints(java.util.List<Any> value) {
    this.hints = value;
  }

  /**
   * Gets the value of the 'label' field.
   * A short, human-readable label of this process object.   */
  public java.lang.CharSequence getLabel() {
    return label;
  }

  /**
   * Sets the value of the 'label' field.
   * A short, human-readable label of this process object.   * @param value the value to set.
   */
  public void setLabel(java.lang.CharSequence value) {
    this.label = value;
  }

  /**
   * Gets the value of the 'description' field.
   * A long, human-readable description of this process object.   */
  public java.lang.CharSequence getDescription() {
    return description;
  }

  /**
   * Sets the value of the 'description' field.
   * A long, human-readable description of this process object.   * @param value the value to set.
   */
  public void setDescription(java.lang.CharSequence value) {
    this.description = value;
  }

  /**
   * Gets the value of the 'cwlVersion' field.
   * CWL document version   */
  public java.lang.CharSequence getCwlVersion() {
    return cwlVersion;
  }

  /**
   * Sets the value of the 'cwlVersion' field.
   * CWL document version   * @param value the value to set.
   */
  public void setCwlVersion(java.lang.CharSequence value) {
    this.cwlVersion = value;
  }

  /**
   * Gets the value of the 'class$' field.
   */
  public java.lang.CharSequence getClass$() {
    return class$;
  }

  /**
   * Sets the value of the 'class$' field.
   * @param value the value to set.
   */
  public void setClass$(java.lang.CharSequence value) {
    this.class$ = value;
  }

  /**
   * Gets the value of the 'expression' field.
   * The expression to execute.  The expression must return a JSON object which
matches the output parameters of the ExpressionTool.
   */
  public java.lang.Object getExpression() {
    return expression;
  }

  /**
   * Sets the value of the 'expression' field.
   * The expression to execute.  The expression must return a JSON object which
matches the output parameters of the ExpressionTool.
   * @param value the value to set.
   */
  public void setExpression(java.lang.Object value) {
    this.expression = value;
  }

  /** Creates a new ExpressionTool RecordBuilder */
  public static ExpressionTool.Builder newBuilder() {
    return new ExpressionTool.Builder();
  }
  
  /** Creates a new ExpressionTool RecordBuilder by copying an existing Builder */
  public static ExpressionTool.Builder newBuilder(ExpressionTool.Builder other) {
    return new ExpressionTool.Builder(other);
  }
  
  /** Creates a new ExpressionTool RecordBuilder by copying an existing ExpressionTool instance */
  public static ExpressionTool.Builder newBuilder(ExpressionTool other) {
    return new ExpressionTool.Builder(other);
  }
  
  /**
   * RecordBuilder for ExpressionTool instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ExpressionTool>
    implements org.apache.avro.data.RecordBuilder<ExpressionTool> {

    private java.lang.CharSequence id;
    private java.util.List<InputParameter> inputs;
    private java.util.List<OutputParameter> outputs;
    private java.util.List<java.lang.Object> requirements;
    private java.util.List<Any> hints;
    private java.lang.CharSequence label;
    private java.lang.CharSequence description;
    private java.lang.CharSequence cwlVersion;
    private java.lang.CharSequence class$;
    private java.lang.Object expression;

    /** Creates a new Builder */
    private Builder() {
      super(ExpressionTool.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(ExpressionTool.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.inputs)) {
        this.inputs = data().deepCopy(fields()[1].schema(), other.inputs);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.outputs)) {
        this.outputs = data().deepCopy(fields()[2].schema(), other.outputs);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.requirements)) {
        this.requirements = data().deepCopy(fields()[3].schema(), other.requirements);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.hints)) {
        this.hints = data().deepCopy(fields()[4].schema(), other.hints);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.label)) {
        this.label = data().deepCopy(fields()[5].schema(), other.label);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.description)) {
        this.description = data().deepCopy(fields()[6].schema(), other.description);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.cwlVersion)) {
        this.cwlVersion = data().deepCopy(fields()[7].schema(), other.cwlVersion);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.class$)) {
        this.class$ = data().deepCopy(fields()[8].schema(), other.class$);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.expression)) {
        this.expression = data().deepCopy(fields()[9].schema(), other.expression);
        fieldSetFlags()[9] = true;
      }
    }
    
    /** Creates a Builder by copying an existing ExpressionTool instance */
    private Builder(ExpressionTool other) {
            super(ExpressionTool.SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.inputs)) {
        this.inputs = data().deepCopy(fields()[1].schema(), other.inputs);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.outputs)) {
        this.outputs = data().deepCopy(fields()[2].schema(), other.outputs);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.requirements)) {
        this.requirements = data().deepCopy(fields()[3].schema(), other.requirements);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.hints)) {
        this.hints = data().deepCopy(fields()[4].schema(), other.hints);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.label)) {
        this.label = data().deepCopy(fields()[5].schema(), other.label);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.description)) {
        this.description = data().deepCopy(fields()[6].schema(), other.description);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.cwlVersion)) {
        this.cwlVersion = data().deepCopy(fields()[7].schema(), other.cwlVersion);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.class$)) {
        this.class$ = data().deepCopy(fields()[8].schema(), other.class$);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.expression)) {
        this.expression = data().deepCopy(fields()[9].schema(), other.expression);
        fieldSetFlags()[9] = true;
      }
    }

    /** Gets the value of the 'id' field */
    public java.lang.CharSequence getId() {
      return id;
    }
    
    /** Sets the value of the 'id' field */
    public ExpressionTool.Builder setId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'id' field has been set */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'id' field */
    public ExpressionTool.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'inputs' field */
    public java.util.List<InputParameter> getInputs() {
      return inputs;
    }
    
    /** Sets the value of the 'inputs' field */
    public ExpressionTool.Builder setInputs(java.util.List<InputParameter> value) {
      validate(fields()[1], value);
      this.inputs = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'inputs' field has been set */
    public boolean hasInputs() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'inputs' field */
    public ExpressionTool.Builder clearInputs() {
      inputs = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'outputs' field */
    public java.util.List<OutputParameter> getOutputs() {
      return outputs;
    }
    
    /** Sets the value of the 'outputs' field */
    public ExpressionTool.Builder setOutputs(java.util.List<OutputParameter> value) {
      validate(fields()[2], value);
      this.outputs = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'outputs' field has been set */
    public boolean hasOutputs() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'outputs' field */
    public ExpressionTool.Builder clearOutputs() {
      outputs = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'requirements' field */
    public java.util.List<java.lang.Object> getRequirements() {
      return requirements;
    }
    
    /** Sets the value of the 'requirements' field */
    public ExpressionTool.Builder setRequirements(java.util.List<java.lang.Object> value) {
      validate(fields()[3], value);
      this.requirements = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'requirements' field has been set */
    public boolean hasRequirements() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'requirements' field */
    public ExpressionTool.Builder clearRequirements() {
      requirements = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'hints' field */
    public java.util.List<Any> getHints() {
      return hints;
    }
    
    /** Sets the value of the 'hints' field */
    public ExpressionTool.Builder setHints(java.util.List<Any> value) {
      validate(fields()[4], value);
      this.hints = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'hints' field has been set */
    public boolean hasHints() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'hints' field */
    public ExpressionTool.Builder clearHints() {
      hints = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'label' field */
    public java.lang.CharSequence getLabel() {
      return label;
    }
    
    /** Sets the value of the 'label' field */
    public ExpressionTool.Builder setLabel(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.label = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'label' field has been set */
    public boolean hasLabel() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'label' field */
    public ExpressionTool.Builder clearLabel() {
      label = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'description' field */
    public java.lang.CharSequence getDescription() {
      return description;
    }
    
    /** Sets the value of the 'description' field */
    public ExpressionTool.Builder setDescription(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.description = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'description' field has been set */
    public boolean hasDescription() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'description' field */
    public ExpressionTool.Builder clearDescription() {
      description = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'cwlVersion' field */
    public java.lang.CharSequence getCwlVersion() {
      return cwlVersion;
    }
    
    /** Sets the value of the 'cwlVersion' field */
    public ExpressionTool.Builder setCwlVersion(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.cwlVersion = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'cwlVersion' field has been set */
    public boolean hasCwlVersion() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'cwlVersion' field */
    public ExpressionTool.Builder clearCwlVersion() {
      cwlVersion = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'class$' field */
    public java.lang.CharSequence getClass$() {
      return class$;
    }
    
    /** Sets the value of the 'class$' field */
    public ExpressionTool.Builder setClass$(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.class$ = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'class$' field has been set */
    public boolean hasClass$() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'class$' field */
    public ExpressionTool.Builder clearClass$() {
      class$ = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'expression' field */
    public java.lang.Object getExpression() {
      return expression;
    }
    
    /** Sets the value of the 'expression' field */
    public ExpressionTool.Builder setExpression(java.lang.Object value) {
      validate(fields()[9], value);
      this.expression = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'expression' field has been set */
    public boolean hasExpression() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'expression' field */
    public ExpressionTool.Builder clearExpression() {
      expression = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    @Override
    public ExpressionTool build() {
      try {
        ExpressionTool record = new ExpressionTool();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.inputs = fieldSetFlags()[1] ? this.inputs : (java.util.List<InputParameter>) defaultValue(fields()[1]);
        record.outputs = fieldSetFlags()[2] ? this.outputs : (java.util.List<OutputParameter>) defaultValue(fields()[2]);
        record.requirements = fieldSetFlags()[3] ? this.requirements : (java.util.List<java.lang.Object>) defaultValue(fields()[3]);
        record.hints = fieldSetFlags()[4] ? this.hints : (java.util.List<Any>) defaultValue(fields()[4]);
        record.label = fieldSetFlags()[5] ? this.label : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.description = fieldSetFlags()[6] ? this.description : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.cwlVersion = fieldSetFlags()[7] ? this.cwlVersion : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.class$ = fieldSetFlags()[8] ? this.class$ : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.expression = fieldSetFlags()[9] ? this.expression : (java.lang.Object) defaultValue(fields()[9]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
