version: 2
workflows:
  version: 2
  everything:
    jobs:
      - unit_test:
          filters:
            branches:
              ignore:
                - gh-pages
      - openapi_validation
jobs:
  openapi_validation:
    docker: # run the steps with Docker
      - image: circleci/openjdk:11.0.4-jdk-stretch
        environment:
          JAVA_TOOL_OPTIONS: -Xmx512m # Java can read cgroup. Sadly the cgroup in CircleCI is wrong. Have to manually set. Nothing to do with surefire plugin, it has its own JVM. The two of these must add up to a bit less than 4GB.
    steps: # a collection of executable commands
      - checkout # check out source code to working directory
      - restore_cache: # restore the saved cache after the first run or if `pom.xml` has changed
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: dockstore-java-{{ checksum "pom.xml" }}
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run: 
          name: Install yq
          command: |
            wget https://github.com/mikefarah/yq/releases/download/3.3.2/yq_linux_amd64
            chmod a+x yq_linux_amd64
            sudo mv yq_linux_amd64 /usr/bin/yq
      - run:
          name: run the actual tests
          command: mvn -B clean install -DskipTests
      - run:
          name: validate openapi
          command: |
            wget --no-verbose https://repo.maven.apache.org/maven2/org/openapitools/openapi-generator-cli/4.3.0/openapi-generator-cli-4.3.0.jar -O openapi-generator-cli.jar
            java -jar openapi-generator-cli.jar validate -i dockstore-webservice/src/main/resources/swagger.yaml
            java -jar openapi-generator-cli.jar validate -i dockstore-webservice/src/main/resources/openapi3/openapi.yaml
  unit_test: # runs not using Workflows must have a `build` job as entry point
    docker: # run the steps with Docker
      - image: circleci/openjdk:11.0.4-jdk-stretch
        environment:
          JAVA_TOOL_OPTIONS: -Xmx512m # Java can read cgroup. Sadly the cgroup in CircleCI is wrong. Have to manually set. Nothing to do with surefire plugin, it has its own JVM. The two of these must add up to a bit less than 4GB.
          PGHOST: 127.0.0.1
      - image: circleci/postgres:9.6.5-alpine-ram
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
    steps: # a collection of executable commands
      - checkout # check out source code to working directory
      - restore_cache: # restore the saved cache after the first run or if `pom.xml` has changed
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: dockstore-java-{{ checksum "pom.xml" }}
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run: 
          name: Install yq
          command: |
            wget https://github.com/mikefarah/yq/releases/download/3.3.2/yq_linux_amd64
            chmod a+x yq_linux_amd64
            sudo mv yq_linux_amd64 /usr/bin/yq
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Install postgresql client
          command: |
            sudo rm -rf /var/lib/apt/lists/*
            sudo apt update
            sudo apt install -y postgresql-client
      - run:
          name: setup postgres
          command: |
            psql -c "create user dockstore with password 'dockstore' createdb;" -U postgres
            psql -c "ALTER USER dockstore WITH superuser;" -U postgres
            psql -c 'create database webservice_test with owner = dockstore;' -U postgres
      - run:
          name: run the actual tests
          command: mvn -B clean install -Punit-tests -ntp
      - run:
          name: run the non-confidential integration tests
          command: |
            # Adding all "normal" certs into this local one that has the Hoverfly cert (instead of adding Hoverfly cert to the global one so it doesn't potentially affect other tests) 
            keytool -importkeystore -srckeystore $JAVA_HOME/lib/security/cacerts -destkeystore LocalTrustStore -srcstorepass changeit -deststorepass changeit           
            mvn -B clean install -Pnon-confidential-tests -Djavax.net.ssl.trustStore=../LocalTrustStore -Djavax.net.ssl.trustStorePassword=changeit -ntp
      - run:
          name: check that JPA classes are consistent with migrations
          command: |
            scripts/check_migrations.sh
          environment:
            TESTING_PROFILE: automated-review
      - run:
          name: clean the cache
          command: |
            rm -rf ~/.m2/repository/io/dockstore
            rm -rf ~/.m2/repository/.cache/download-maven-plugin directory
      - save_cache: # saves the project dependencies
          paths:
            - ~/.m2
          key: dockstore-java-{{ checksum "pom.xml" }}
      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/junit/ \;
          when: always
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit
      - run:
          name: Make jar directory
          command: mkdir /tmp/artifacts
      - run:
          name: Move jars
          command: cp dockstore-webservice/target/dockstore*[^s].jar /tmp/artifacts
      - run:
          name: Move swagger.yaml
          command: |
            cp dockstore-webservice/src/main/resources/swagger.yaml /tmp/artifacts
            cp dockstore-webservice/src/main/resources/openapi3/openapi.yaml /tmp/artifacts
      - store_artifacts:
          path: /tmp/artifacts
